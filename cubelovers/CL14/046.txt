From @mail.uunet.ca:mark.longridge@canrem.com  Sat Jan  7 00:34:57 1995
Return-Path: <@mail.uunet.ca:mark.longridge@canrem.com>
Received: from seraph.uunet.ca (uunet.ca) by life.ai.mit.edu (4.1/AI-4.10) for /com/archive/cube-lovers id AA04167; Sat, 7 Jan 95 00:34:57 EST
Received: from portnoy.canrem.com ([198.133.42.17]) by mail.uunet.ca with SMTP id <124330-4>; Sat, 7 Jan 1995 00:14:48 -0500
Received: from canrem.com by portnoy.canrem.com (4.1/SMI-4.1)
	id AA10954; Sat, 7 Jan 95 00:10:53 EST
Received: by canrem.com (PCB-UUCP 1.1f)
	id 1C791A; Fri,  6 Jan 95 23:57:55 -0500
To: cube-lovers@life.ai.mit.edu
Reply-To: CRSO.Cube@canrem.com
Sender: CRSO.Cube@canrem.com
Subject: Cube with GAP
From: mark.longridge@canrem.com (Mark Longridge)
Message-Id: <60.939.5834.0C1C791A@canrem.com>
Date: Fri, 6 Jan 1995 23:51:00 -0500
Organization: CRS Online  (Toronto, Ontario)

Dan Hoey states:

> Well, call me John Henry.  Say, do you have gap libraries for other
> magic polyhedra?  For higher-dimensional magic?

 Well, I've played with GAP for a while now and at the risk of being
incorrect, I'm going to make a few comments :-)

 As I understand it, the format Martin uses in GAP is to represent
the 3x3x3 cube by assigning each individual facelet an unique
number like so (by the way, the following part is all from the
GAP documentation).

----------------------------------------------------------------------
                      +--------------+
                      |  1    2    3 |
                      |  4  top    5 |
                      |  6    7    8 |
       +--------------+--------------+--------------+--------------+
       |  9   10   11 | 17   18   19 | 25   26   27 | 33   34   35 |
       | 12  left  13 | 20 front  21 | 28 right  29 | 36  rear  37 |
       | 14   15   16 | 22   23   24 | 30   31   32 | 38   39   40 |
       +--------------+--------------+--------------+--------------+
                      | 41   42   43 |
                      | 44 bottom 45 |
                      | 46   47   48 |
                      +--------------+

then the group is generated by the following generators, corresponding
to the six faces of the cube (the two semicolons tell GAP not to print
the result, which is identical to the input here).

gap> cube := Group(
>   ( 1, 3, 8, 6)( 2, 5, 7, 4)( 9,33,25,17)(10,34,26,18)(11,35,27,19),
>   ( 9,11,16,14)(10,13,15,12)( 1,17,41,40)( 4,20,44,37)( 6,22,46,35),
>   (17,19,24,22)(18,21,23,20)( 6,25,43,16)( 7,28,42,13)( 8,30,41,11),
>   (25,27,32,30)(26,29,31,28)( 3,38,43,19)( 5,36,45,21)( 8,33,48,24),
>   (33,35,40,38)(34,37,39,36)( 3, 9,46,32)( 2,12,47,29)( 1,14,48,27),
>   (41,43,48,46)(42,45,47,44)(14,22,30,38)(15,23,31,39)(16,24,32,40)
> );;
----------------------------------------------------------------------

 You can't use T for facelet 1, and in general you can only use numbers
as facelet identifiers, no alphabetics. Given the following
conventions a magic dodecahedron should be no problem, or say a
picture Rubik's Revenge ...  I don't know how a normal 4x4x4 could
be represented though.

-> Mark <-
Email: mark.longridge@canrem.com

