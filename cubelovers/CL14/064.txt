From BRYAN@wvnvm.wvnet.edu  Sun Jan  8 23:24:08 1995
Return-Path: <BRYAN@wvnvm.wvnet.edu>
Received: from WVNVM.WVNET.EDU by life.ai.mit.edu (4.1/AI-4.10) for /com/archive/cube-lovers id AA27846; Sun, 8 Jan 95 23:24:08 EST
Message-Id: <9501090424.AA27846@life.ai.mit.edu>
Received: from WVNVM.WVNET.EDU by WVNVM.WVNET.EDU (IBM VM SMTP V2R2)
   with BSMTP id 7702; Sun, 08 Jan 95 23:16:57 EST
Received: from WVNVM.WVNET.EDU (NJE origin BRYAN@WVNVM) by WVNVM.WVNET.EDU
 (LMail V1.2a/1.8a) with BSMTP id 9435; Sun, 8 Jan 1995 23:16:57 -0500
X-Acknowledge-To: <BRYAN@WVNVM.WVNET.EDU>
Date:      Sun, 8 Jan 1995 23:16:52 EST
From: "Jerry Bryan" <BRYAN@wvnvm.wvnet.edu>
To: "Cube Lovers List" <Cube-Lovers@ai.mit.edu>
Subject:   Re: kociemba's algorithm for quarter turns
In-Reply-To: Message of 01/05/95 at 17:12:18 from mreid@ptc.com

On 01/05/95 at 17:12:18 mreid@ptc.com said:

>for much too long now, i've meant to implement kociemba's algorithm
>for quarter turns.  finally i've gotten around to it, and it's found

>superflip:
>   B3 L3 U3 L3 F1 U1 D1 L3 B1 U1 F1 R3 L1 F3 B2 U1 D1 F2 B2 R2 U1 D1   26q

I read the articles in the archives about Kociemba's algorithm about
a year ago, without (I confess) fully understanding them.  In particular,
I do not fully understand what differentiates Kociemba's algorithm from
Thistlethwaite's algorithm, other than it uses a different arrangement
of nested subgroups.  I shall strive to read the articles again with
a deeper level of understanding.

But in the meantime, I wonder if you could verify that Kociemba's
algorithm does not guarantee to find a minimal process?  In particular,
is it the case that 26q is a minimal superflip, or is it only an
upper bound?

The reason I ask is that I have decided to go ahead and calculate God's
Algorithm under quarter turns for depth 11.  (Through depth 10 is
already in hand.)  Once that is accomplished, it should be a
*fairly* easy task to establish a lower bound on the superflip
at 22 quarter turns via two half depth searches.  In fact, the
second half depth search should be fairly easy to accomplish
because all I have to do is superflip each element of the data base
from the first search to establish the data base for the second
search.

I can already establish a lower bound of 14 quarter turns on the
superflip.  It may be recalled that I was able to accomplish a
complete search for edges-only (no corners, no Face centers, and
rotations considered equivalent).  There was some consternation
when I reported that the superflip was 9 quarter turns from Start
because the superflip is even.  But without Face centers and with
rotations considered equivalent, normal parity rules do not
apply.

I am now working on edges-only, either with centers, or else with
rotations *not* considered equivalent (either G[E,F] or G[E]),
depending on which way you want to think about it.
In this case, the superflip really is even.  I am working on level
13, and the superflip has not yet appeared.  Hence, it is at least
at level 14 (without corners), and will therefore be at least at level
14 when the corners are added in.  Strictly speaking, the superflip
has appeared already, and at level 9 just where it had to appear.
But in its appearance at level 9, it is composed with a non-trivial
rotation, so it isn't the superflip as the superflip is normally
understood.

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
Robert G. Bryan (Jerry Bryan)                        (304) 293-5192
Associate Director, WVNET                            (304) 293-5540 fax
837 Chestnut Ridge Road                              BRYAN@WVNVM
Morgantown, WV 26505                                 BRYAN@WVNVM.WVNET.EDU

