From cube-lovers-errors@curry.epilogue.com  Tue May  7 15:11:29 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id PAA02528 for <cube-lovers-outbound@curry.epilogue.com>; Tue, 7 May 1996 15:11:28 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Tue, 7 May 1996 17:15:39 +0200
Message-Id: <199605071515.RAA16897@mailsvr>
X-Sender: geohelm@mailsvr.pt.lu
X-Mailer: Windows Eudora Version 1.4.4
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: cube-lovers@ai.mit.edu
From: Georges Helm <geohelm@pt.lu>
Subject: cube solutions prior to 1980

Some time ago someone asked a question about early cube solutions.
Unfortunately I don't find the corresponding mail, but here is what I have
found.
I have solutions by the following people which were all written in 1979:
Angevine, Beasley, Cairns/Griffiths, Dauphin, Howlett, Jackson (3-D),
Johnson, Maddison, Singmaster, Sweenen and Truran.
At http://ourworld.compuserve.com/homepages/Georges_Helm/cubbib.htm other
info on solutions can be found.
Georges Helm           
geohelm@pt.lu
http://www.geocities.com/Athens/2715
http://ourworld.compuserve.com/homepages/Georges_Helm
-------------------------------------
Phone: ++352-503896 (answer machine)
       ++352-38019 (office)
       ++352-021 19 13 13 (GSM)
Fax:   ++352-38535
-------------------------------------



From cube-lovers-errors@curry.epilogue.com  Wed May  8 02:22:29 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id CAA04036 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 8 May 1996 02:22:28 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Sender: s2394459@csc.cs.technion.ac.il
Message-Id: <31903CF4.3470@cs.technion.ac.il>
Date: Wed, 08 May 1996 09:19:32 +0300
From: Rubin Shai <s2394459@cs.technion.ac.il>
X-Mailer: Mozilla 2.01 (X11; I; SunOS 5.5 sun4m)
Mime-Version: 1.0
To: Cube-Lovers@ai.mit.edu
Cc: s2394459@cs.technion.ac.il
Subject: Rubik's cube
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Hi 
I'm looking for solutions to the 2X2X2 cube.
I need solution that put the cubiks ONE AFTER THE OTHER.
Is anyone can help?
Thanks 
Shai Rubin


From cube-lovers-errors@curry.epilogue.com  Fri May 10 16:55:11 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id QAA11643 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 10 May 1996 16:55:10 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <31932827.7790@cytex.com>
Date: Fri, 10 May 1996 04:27:35 -0700
From: "Michael B. Parker" <mbparker@cytex.com>
Reply-To: mbparker@cytex.com
Organization: CYTEX CORPORATION
X-Mailer: Mozilla 3.0b3 (Win95; I)
Mime-Version: 1.0
Newsgroups: rec.puzzles,geometry.puzzles,rec.games.abstract,comp.ai.games,rec.games.design,rec.games.misc,oc.general,la.general
To: PuzzleParty@cytex.com, Cube-Lovers@ai.mit.edu, www-designer@cytex.com,
        506maple-residents@cytex.com, mitacas@cytex.com,
        Pierre Wuu <pwuu@aol.com>, "Julie S. Peterson" <jpete@cogent.net>
Cc: Wei-Hwa Huang <whuang@cco.caltech.edu>
Subject: Puzzle Party THIS SATURDAY, 7pm, Cal Tech
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

#?????????????????#
                              ? PUZZLE PARTY 5! ?
                              #?????????????????#

HEY, LA!  PUZZLE PARTY 5 IS AT *CALTECH*!, and is hosted by the International
Puzzle Champion (and CalTech Junior) Wei-Wwa Huang!  Wei-Hwa was recently
featured in the LA Times for leading the US Puzzle Team to victory in the
1996 International Puzzle Chapionships.

So show and share the brain teasers and mechanical puzzles you have, and the
mental games you know, and discover dozens of new ones, and new tricks!  (Or,
if you're still puzzleless, *this is the place* to get clued in!)  Plenty of
snacks, refreshments, and good conversation provided.

WHEN:   Saturday, 1996 May 11, 7pm until the wee hours of the morning...

WHERE:  Winnett Student Center, 1200 San Pasqual, Pasadena, CA

  Caltech is located in a rectangle bordered on the north by Del Mar Blvd.,
  south by California Blvd., west by Wilson Avenue, east by Hill Avenue.
  Winnett is the small building right in the middle of campus.  Parking
  near Winnett is limited, so try to find a local parking space and walk
  to Caltech.  There is some parking near the northwest and southeast of
  Caltech, but they can be quite full.  Signs will be posted on and around
  major entrances.

 Directions:
  From 210 fwy: exit south on either:
    (1) Hill Avenue: Caltech will be on your right after 2 to 3 miles; or
    (2) Lake Avenue: Turn left on Del Mar after 2 miles, then right
        on Wilson.  Caltech will be on your left.
  From 110 north: continue until in Pasadena.  Turn right at California.
    Caltech will be on your left after 3 miles.

COST:   $10 Non-MITCSC Members without puzzles
        $ 8     MITCSC Members without puzzles
        $ 6 Non-MITCSC Members with puzzles
        $ 4     MITCSC Members with puzzles
        Free  Caltech Students (with Student ID)
        [Hey, it's a condition of them letting us use the room...]

Please RSVP (with the number of puzzles you'll be bringing) so we know how
many people (and puzzles) to expect.

RSVP:   Mike Parker, MIT '89 - mbparker@cytex.com, 800-MBPARKER xLIVE, xFAXX
        (if you get lost, call 800-MBPARKER xLIVE -- will have cell phone)
HOST:   Wei-Hwa Huang, CIT '97 - whuang@cco.caltech.edu, 818-395-1599

                 PS: for the latest Puzzle Party updates,
                     just tune in to http://www.cytex.com/~mitcsc/

-----------------------------------------------------------------------------
 Michael B. Parker, MIT '89
  CYTEX CORP. President                 http://www.cytex.com/~mbparker/
  email mbparker@cytex.com, direct voice 714-639-6436, fax 714-639-5381

CYTEX CORPORATION,  ** WE PUT YOUR COMPANY ON THE INTERNET **
  506 N. Maplewood St., Orange, CA 92667-6917   *   1-800-33CYTEX (332-9839)
  Dial 800#, then enter extension (pin): SALES(7253), TECH(8324), FAXX(3299)
  World-Wide-Web http://www.cytex.com/  *  email info@cytex.com  (r19960229)


From cube-lovers-errors@curry.epilogue.com  Sat May 11 00:25:22 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id AAA12417 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 11 May 1996 00:25:22 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <199605102323.TAA15582@mail-e2b-service.gnn.com>
X-Mailer: GNNmessenger 1.3
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Fri, 10 May 1996 18:24:19
From: Sean  Brewer <BREWCREW@gnn.com>
To: cube-lovers@ai.mit.edu
Subject: Rubik's Revenge

  My father has been looking for the sixteen sided Rubik's Revenge  
for years now.  If you have any idea where I can get one for him  
please let me know.  Thanks for any help you can give.




From cube-lovers-errors@curry.epilogue.com  Sat May 11 04:40:17 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id EAA12883 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 11 May 1996 04:40:16 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sat, 11 May 96 01:52:57 +0400 (EST)
From: "Robert P. Munafo" <cube%mrob.uucp@ursa-major.spdcc.com>
Reply-To: "Robert P. Munafo" <cube%mrob.uucp@ursa-major.spdcc.com>
Message-Id: <7003%mrob.uucp@ursa-major.spdcc.com>
To: cube-lovers@ai.mit.edu
Subject: The barcode


Dale Newfield wrote:
> [...]
> Charlottesville, VA 22901-2708
> |..|.|..|.||.|..||......||..|.||...|||...|..|.||....|.|..|..||
> (No, this barcode is not necessary, but I figured this would be a good
> place to ask: "Has anyone figured out what information is encoded in
> this, or how it is encoded?" :-)

It's your zip code. The Post Office recognizes the zipcode with some sort of
OCR (Optical Character Recognition) then prints a barcode on the envelope
so that simpler machines can sort the mail later in its delivery path.
Sometimes the sender prints the barcodes (if your mail is part of a large
mailing, like junk mail, magazines, tax forms etc.).

This is from the URL http://www.advanstar.com/autoidnews/barcofaq.txt
> POSTNET symbols are different from other symbologies because the 
> individual bar height alternates rather than the bar width. Each 
> number is represented by a pattern of five bars. A single tall bar is 
> used for the start and stop bars.
> 
> Each symbol includes a check digit defined as the single digit that 
> must be added to the sum of all the digits to make the total the next 
> multiple of 10. For example, 98116's check digit is 5 because:  
> 9+8+1+1+6=25 and 25 + 5 = 30.
> 
> POSTNET can be used for 5-digit, 9-digit ZIP+4, and the new 11-digit 
> Delivery Point Barcode. They are often used in conjunction with one 
> of the three FIM bars (Facing Identification Marks) which are found 
> on the upper right corner of a mail piece like Business Reply Mail.

The encoding is as follows:

  ||...  ...||  ..|.|  ..||.  .|..|  .|.|.  .||..  |...|  |..|.  |.|..
    0      1      2      3      4      5      6      7      8      9

--
Robert P. Munafo                  UUCP: ...!harvard!spdcc!mrob!cube
CUBE-LOVERS Account              Internet: cube%mrob.uucp@spdcc.com


From cube-lovers-errors@curry.epilogue.com  Sat May 11 17:40:28 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id RAA15973 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 11 May 1996 17:40:28 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
From: 100021.1617@compuserve.com
Date: 11 May 96 10:15:57 EDT
To: CUBE-LOVERS@ai.mit.edu, Sean Brewer <BREWCREW@gnn.com>
Subject: Re: Rubik's Revenge
Message-Id: <960511141556_100021.1617_EHV69-2@CompuServe.COM>


> My father has been looking for the sixteen sided Rubik's Revenge  
> for years now.  If you have any idea where I can get one for him  
> please let me know.  Thanks for any help you can give.

Me too. Somebody posted this information some time ago in the cube-lovers 
list...

<http://www.puzzletts.com>

It's a shop with Rubik-related puzzles, among others, including

#130 Rubik's Revenge (4x4x4)
#131 Professor's Cuve (5x5x5)

They sell on the Internet, too. They also have a complete list of 
distribuitors worldwide, including

*Game Preserve
222 D Street, Suite 4
Davis, CA 95616
USA
Tel.: (916) 753 42 63

*Star Magic
4026 24th Street
San Francisco, CA 94114
USA

Greetings,

Alvaro



From cube-lovers-errors@curry.epilogue.com  Sat May 11 17:53:19 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id RAA15991 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 11 May 1996 17:53:18 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sat, 11 May 1996 17:22:02 +0100
Message-Id: <9605111622.AA25415@mecmdb.me.ic.ac.uk>
X-Sender: ars2@mecmdb.me.ic.ac.uk
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: cube-lovers@ai.mit.edu
From: The Unofficial Thermodynamics Fan Club of the UK <a.southern@ic.ac.uk>
Subject: Re: Rubik's Revenge
X-Mailer: <PC Eudora Version 1.4>

>  My father has been looking for the sixteen sided Rubik's Revenge  
>for years now.  If you have any idea where I can get one for him  
>please let me know.  Thanks for any help you can give.
>
>

I always thought that the Rubik's cube principle could only be applied to 
Polyhedrons of sides totalling 4, 6, 8, 12 or 20 as these are the only ones 
that could be made from only one shape of side.

If it is a 12 sided Rubik's polyhedron, there is one called the MegaMinx 
made by Uwe Meffret in Hong Kong. This should be available around the world 
as it is still in production.

Meffret's Company is known as:
IDI,
P.O.Box 24455,
Aberdeen,
Hong Kong.

Tel: 852-2518-3080
Fax: 852-2518-3282
(I haven't found anything on the Net for his Company, but I'd be interested 
to learn....)

 
Another possibility is that it could be a 'Cut down' Rubik Cube, but I 
haven't seen any of this type in years.



Andy,

(The Artist Currently Known as the Unofficial Thermodynamics Fan Club of The 
U.K.)



From cube-lovers-errors@curry.epilogue.com  Mon May 27 19:46:08 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id TAA28038 for <cube-lovers-outbound@curry.epilogue.com>; Mon, 27 May 1996 19:46:07 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Thu, 23 May 1996 12:53:27 -0500 (EST)
From: Jerry Bryan <jbryan@pstcc.cc.tn.us>
Subject: Compact Cube Representation for Shamir and Otherwise
To: Cube-Lovers <cube-lovers@ai.mit.edu>
Message-Id: <Pine.PMDF.3.91.960523123122.94611A-100000@PSTCC6.PSTCC.CC.TN.US>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Content-Transfer-Encoding: 7BIT


I said I wasn't going to write again about Shamir's method until
I had a working program.  Well, I don't have a working program
yet but this is only indirectly about Shamir.  Rather, it is
about how we might represent the cube compactly in a way that is
easy to work with.  We would like a compact representation that
is usable by Shamir's method.  But more importantly, we would
like a compact representation that is easily usable for forming
compositions in general.  The compact representation I will
describe is useful in a number of contexts, not just Shamir's
method.

My standard model is an S24 x S24 model, modeling the corner and
edge facelets separately and not modeling the face centers.  At
one byte per facelet, this representation requires 48 bytes per
position without packing.

David Moews has described a wreath product representation (e.g.,
23 Feb 1996) which requires 40 bytes without packing.  There are
8 bytes to describe the position of each corner cubie, and 8 more
bytes to describe the twist of each corner cubie.  Similarly,
there are 12 bytes to describe the position of each edge cubie,
and 12 more bytes to describe the flip of each edge cubie.  This
representation has the virtue of being 8 bytes smaller than the
S24 X S24 representation, while still being easy to work with and
manipulate.

For my very large searches, I always used a supplement
representation for the external files.  That is, I only stored
one facelet from each of the 8 corner cubies and one facelet from
each of the 12 corner cubies for a total of 20 bytes unpacked. 
(I also packed the 20 bytes into 13 bytes to use less tape, but
that is not important for this particular story.)

However, I found the supplement representation awkward to
manipulate, so I always expanded the supplement representation to
a full S24 x S24 representation inside the program.  None of my
programs were more than a few K (not a few Meg, just a few K
because the storage was external), so the extra few bytes were a
non-issue.  But now that I want to implement Shamir, my programs
will be very large.  Therefore, I wanted to figure out how to
manipulate the supplement representation directly.  The
representation itself is not new, but the technique to manipulate
it is.  Here is what I have come up with.  I think it is
applicable to Shamir programs and non-Shamir programs alike.

I will use the corners as an example.  Similar comments would
apply to the edges.  My standard supplement for the corners is
the Front facelets and the Back facelets.  The way I number the
facelets, these are facelets 1 through 4 for the Front and 21
through 24 for the Back.  In the vector notation we have been
talking about in this thread, the supplement of the identity is
[1,2,3,4,21,22,23,24].  1 is mapped to 1, 2 is mapped to 2, 3 is
mapped to 3, and 4 is mapped to 4.  However, 5 is not mapped to
21.  Rather, 21 is mapped to 21, 22 is mapped to 22, etc..  You
have to think of the last 4 indexes as being offset by 16 because
16 of the facelets are left out.  From this vector, we can
reconstruct the fact that 5 is mapped to 5, 6 is mapped to 6,
etc. based on which facelets are part of which cubies.

Composition of these supplement vectors can be hard or easy
depending on what we are trying to do.  Suppose X is a
permutation on the corners represented by an 8 byte supplement
vector and q is a quarter-turn on the corners represented by a 24
byte permutation vector.  Then, the calculation of Xq more or
less "just works", and the composition is an 8 byte supplement
vector.  For some kinds of things you have to worry a little bit
about the offset of the last 4 indexes, but the computer coding
is basically very straightforward.  The code even runs faster
than the code for composing two 24 byte permutation vectors.

But suppose for some reason we need to form qX instead of Xq. 
The q vector will map into values that simply aren't there in the
X vector.  The programming symptom will be an out-of-bounds
subscript.

It doesn't help to use two supplement vectors.  If X and Y are
both supplement vectors, then neither the product XY nor the
product YX can be formed.  The same problem occurs anytime a
supplement vector is pre-multiplied, no matter whether it is 
pre-multiplied by another supplement vector or whether it is 
pre-multiplied by a full-length permutation vector.

With some searches you can probably get by with only post-multiplying 
supplement vectors by full-length permutation
vectors.  I think you could form a breadth first search tree that
way by always post-multiplying by full-length vectors q in Q. 
But I always want to form M-conjugates m'Xm, so I have to be able
to pre-multiply.  Here is how to do it with supplement vectors. 

As I said, my old programs expand an 8 byte supplement vector for
the corners into a 24 byte permutation vectors on the corners
when a position is read from a file into memory.  Two special 24
byte vectors are used in the process.  One of the 24 byte vectors
defines which facelet is to the right of each other facelet on
the corner cubies, and the other of the 24 byte vectors defines
which facelet is to the left of each other facelet on the corner
cubies.  So the supplement is expanded by mapping each of the
8 bytes in the supplement into itself, and in addition by mapping
each of the 8 bytes into its respective right and left.

These "right of" and "left of" vectors can be identified with the
permutations which twist each corner cubie right and left,
respectively.  These permutations are not in the Start orbit. 
But we can nonetheless observe that both of them commute with
every other permutation.

I am focusing this example on the corners, but my old programs
also have to expand a 12 byte supplement vector for the edges
into a 24 byte permutation vector.  The vector which accomplishes
this mapping defines for each edge facelet the other facelet
which is on the same edge cubie.  This permutation can be
identified with Superflip, and Superflip also commutes with every
other permutation.

The center of G consists of the identity plus Superflip.  These
permutations fix the corners and either fix or flip the edges. 
But the center of the constructable group consists of fixing or
flipping the edges composed with fixing or twisting right or
twisting left the corners.  So there are six positions in the
center of the constructable group, and it is precisely these six
permutations which are required to make composition of supplement
vectors work.

I normally write an M-conjugate in E-mail just as m'Xm.  But for
this example, let me write it as (i)m'Xm, where i is the argument
of the permutation and where i runs from 1 to 24 for the corners. 
The trick to make composition of supplements work is going to be
to write the permutation as something like (i)m'k'Xkm, where k is
not really a permutation.  Rather, it is some magic to be defined
below.

The trick is not just for M-conjugation.  It is for pre-multiplication 
in general.  The Xm part of m'Xm is not a problem;
it is the m'X part which is a problem.  Similarly, to multiply
supplement X (or full-length vector X) by supplement Y, the k
trick would be Xk'Yk, which we could group as X(k'Yk) for
emphasis.  As with M-conjugation, I will make the argument
explicit and write (i)Xk'Yk.

But just what is this k?  For the corners, we define k[1] as the
identity, k[2] as twist all corners right, and k[3] as twist all
corners left.  We also define a 24 byte vector j which defines
which corner facelets are in the supplement (a value of 1), right
of the supplement (a value of 2), or left of the supplement (a
value of 3).  j is a function, but is not a permutation.  With my
particular numbering scheme and choice of supplement, j looks
something like [1,1,1,1,2,3,2,3,......3,2,3,2,1,1,1,1].  That is,
only the first four and last four facelets are in the supplement. 
The j vector is used to index k.  For the edges we would define
k[1] as the identity and k[2] as Superflip.

An M-conjugate would then be calculated as 

    (i)m' k[j[t]]' X k[j[t]] m

for i in 1..24 and where t=(i)m'.  Effectively, k'
maps (i)m' into the supplement so that X operates only on the
supplement, and k undoes (untwists and/or unflips) whatever k'
does.  However, the k-conjugation must be applied on a facelet by
facelet basis.  k[1] might be used for one facelet, k[2] for
another facelet, and k[3] for still another.  Nonetheless, since
each of the k's is in the center of the constructable group, we
have X=k'Xk for all X, irrespective of which k is used for a
particular facelet.

It is not strictly necessary, but this procedure would be
slightly simpler if the facelets were renumbered.  That is,
renumber the supplement 1 to 8 for the corners and 1 to 12 for
the edges.

It is easy to see how to construct the tree required by Shamir's 
method using this supplement representation.  The supplement 
representation does not reduce the number of potential branches
out of each node.  But it does reduce the number of levels of nodes.
I plan to have the branching for the first 8 levels of my tree be
controlled by the supplement for the corners, and the branching
for the next 12 levels of my tree be controlled by the supplement
for the edges.

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
Robert G. Bryan (Jerry Bryan)                jbryan@pstcc.cc.tn.us
Pellissippi State                            (423) 539-7127
10915 Hardin Valley Road                     (423) 694-6435 (fax)
P.O. Box 22990
Knoxville, TN 37933-0990



From cube-lovers-errors@curry.epilogue.com  Tue May 28 14:04:51 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA29949 for <cube-lovers-outbound@curry.epilogue.com>; Tue, 28 May 1996 14:04:51 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <9605281411.AA29962@sarofim-sun.MIT.EDU>
To: cube-lovers@ai.mit.edu
Subject: Square 1 Combinations
Date: Tue, 28 May 1996 10:11:46 EDT
From: "Michael C. Masonjones" <masonjon@mit.edu>

Hi, I'm new to the group, but I have read the entire archive.  I noticed
rather little work done on Square 1.  It seems to me that this puzzle
deserves a closer look for finding God's algorithm.  Mike Reid's
calculations notwithstanding (archive 17), I have found that the problem
can be reduced by at least a factor of 400 if we just get rid of
combinations that result from trivial face turns, and if we note that
the Start position has a degeneracy of 16. (One center slice is assumed
fixed - another factor of 2 is tempting but not possible)

Mike's calcualtion for the number of states would reduce to:
 (2*(1/6)*(9/2)+2*(28/3)*3+(35/4)*(35/4))*2*8!*8!=435891456000
combinations.  Divide by the start degeneracy, multiply by 2 storage
bits per state, and you get a storage requirement of 6.81GB.  This seems
very close to being doable.  Maybe in another 10 years, I can do this
project on my PC, if no one has done it yet. 


On another note, when I signed up, I mentioned to Alan that I must be
crazy enough to join this group since I have a five foot mockup of a
rubik's type puzzle as my coffee table.  He thought its description
might be of general interest. Skip the rest of this paragraph if you
couldn't care less about its origins. I built it for Caltech's ditch day event
Maybe you have heard of it. That's where all the seniors leave for the
day with their room locked only with a puzzle of some sort, and the
object is for the undergraduates to get into the room by solving it
(with a couple of clues, of course).  Anyway, being as it was that I
had a mechanical engineer roommate...  The rest is history, and I now
have a five foot diameter puzzle coffee table.

OK, a description.  The puzzle is a three centered version of the
Puzzler, widely available in the last few years in puzzle/game specialty
stores.  The differences being that it is colored so that the maximum
number of combinatins are possible (including the supergroup of distinguishing
face centers).  For those of you who  have not seen the Puzzler, and thus
have no frame of reference, consider one vertex of a cube and it's 
surrounding faces.  7 vertices, 9 edges.  Faces can undergo 4 quarter
turns.  Extrapolate to the Megaminx and you again get one central vertex
for a total of 10 vertices and 12 edges.  Faces can undergo 1/5 turns.  
Extrapolate again to six sided faces, and you get a flat puzzle with one
central vertex for a total of 13 vertices, and 15 edges.  Faces can
undergo 1/6 turns.

So it is basically the <URF> group for a' cube' with
hexagonal faces.  The extra face over the Puzzler also serves to remove 
the significant parity constraints on the edge pieces.  (compare <UR>
group to <URF> group of regular cube).

You, too, can make a smaller version of the Ditch Day puzzle at home.  
The advantage of the flat puzzle is that it is easily constructed.  I 
built the 6 inch diameter prototype with poster board, lamination, magic
markers, and an easily machined smooth pressboard frame.  You only need
to drill three 3 inch holes.  The rest is trimming.  Oh yeah, you will 
need a plexiglass faceplate to keep the pieces in too.  Cutting out and 
gluing together the poster board to make sufficiently thick pieces was 
the hardest part.

Number of combinations = (13!*15!*3^13*2^15*6^3)/24 = 3.83E33
Difficulty is comparable with Megaminx.

Happy cubing.  This is already too long.

					mikem.
					Mike Masonjones.



From cube-lovers-errors@curry.epilogue.com  Tue May 28 18:56:50 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id SAA00500 for <cube-lovers-outbound@curry.epilogue.com>; Tue, 28 May 1996 18:56:50 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Tue, 28 May 1996 13:18:51 -0700
From: "Jason K. Werner" <mrhip@neuhelp.corp.sgi.com>
Message-Id: <9605281318.ZM12960@neuhelp.corp.sgi.com>
In-Reply-To: "Michael C. Masonjones" <masonjon@mit.edu>
        "Square 1 Combinations" (May 28, 10:11)
References: <9605281411.AA29962@sarofim-sun.MIT.EDU>
X-Face: 6]L85m[]|?5>dL9qI]8j>PPk/:]fF4Ma`5O&VJU)U.6"lo:gX{D`?bNqWl~),bS~`rrB5+P
                                                                                                                                                                   d=NQ_[sXE*#|;SZ)PanGF^&Q-Ch[[|Q)Pgx%ts.JdPJ,3bwU84qc^s2q"sH{l9+g]$cD&a"?S]PQ)F
                                                                                                                                                                   b~4}Y93=ZOimDi_J^(lR;OLeN^W\]/&!v8S=~8Qw'HJ.ksu:R/!iV:WiExaWEXw!v$&hyp[mC
X-Mailer: Z-Mail-SGI (3.2S.2 10apr95 MediaMail)
To: cube-lovers@ai.mit.edu, "Michael C. Masonjones" <masonjon@mit.edu>
Subject: Re: Square 1 Combinations
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On May 28, 10:11, Michael C. Masonjones wrote:
> Subject: Square 1 Combinations
.....
> On another note, when I signed up, I mentioned to Alan that I must be
> crazy enough to join this group since I have a five foot mockup of a
> rubik's type puzzle as my coffee table.  He thought its description
> might be of general interest. Skip the rest of this paragraph if you
> couldn't care less about its origins. I built it for Caltech's ditch day
event
> Maybe you have heard of it. That's where all the seniors leave for the
> day with their room locked only with a puzzle of some sort, and the
> object is for the undergraduates to get into the room by solving it
> (with a couple of clues, of course).  Anyway, being as it was that I
> had a mechanical engineer roommate...  The rest is history, and I now
> have a five foot diameter puzzle coffee table.
.....


Speaking of oversized Rubik puzzles...

A good friend of mine built an oversized, fully functional Rubik's Magic about
3 years ago.  She painted all of the artwork that went inbetween the plastic
squares, cut out all the grooves, and used a heavy duty grade of fishing wire
to connect all the pieces.  We kind of thrashed my Rubik's Magic to see how
many wires were used in the Magic and all the paths they took.

I _think_ each square was 1'X1', so that would have made the puzzle 2'X4'.
 It's fun to play with, but only if you have the stamina; it's heavy!  :)

	-Jason

-- 
Jason K. Werner, Silicon Graphics
U.S. Field Operations I/S Sys Admin
mrhip@corp.sgi.com, 415-933-6397
"I will choose free will".....Neil Peart
"These go to eleven".....Nigel Tufnel












*********************** THIS IS A FREE SPEECH ZONE ************************
In defiance of the Communications Decency Act, I refuse to self-censor the
content of my e-mail, my online postings, and my Web pages.  I urge other
Constitutionally-protected Americans to declare their online communications
FREE SPEECH ZONES and to fight any attempts at regulating, censoring and
"dumbing down" the Internet.  The Net is not TV and radio!  Let's keep it
that way.      http://www.eff.org/blueribbon.html       mrhip@corp.sgi.com
**************** I SUPPORT THE EFF'S BLUE RIBBON CAMPAIGN *****************


From cube-lovers-errors@curry.epilogue.com  Tue May 28 23:35:28 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA01092 for <cube-lovers-outbound@curry.epilogue.com>; Tue, 28 May 1996 23:35:27 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <31ABA343.23B@erols.com>
Date: Tue, 28 May 1996 21:07:15 -0400
From: Charlie Dickman <charlied@erols.com>
Reply-To: charlied@erols.com
X-Mailer: Mozilla 2.01 (Macintosh; U; 68K)
Mime-Version: 1.0
To: Cube-Lovers@ai.mit.edu
Subject: A 4-dimensional Cube
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

I have a document that describes a model of a 4-dimensional Rubik's Cube 
(3x3x3x3) and a program that implements the model. The document is a 
stand-alone that executes on a Macintosh and the implementation of the 
model runs on a Mac as well.

This paper/program is based on an unpublished paper by Harry Kamack and 
Tom Keene that was referenced in Hofstader's '82 SA column.

I'll be more than happy to share them with any interested parties - let 
me know your interest. Anyone with a site on the Web who would like me 
to upload the files please let me know. The document is 305K bytes, the 
program is 197K bytes.

Charlie Dickman
charlied@erols.com


From cube-lovers-errors@curry.epilogue.com  Wed May 29 01:37:34 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id BAA01350 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 29 May 1996 01:37:34 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 29 May 1996 00:54:08 -0400
From: AirWong@aol.com
Message-Id: <960529005406_544579496@emout14.mail.aol.com>
To: CUBE-LOVERS@ai.mit.edu
Subject: ULTIMATE Rubik's cube?

I'm not sure if this has been discussed or not, but I was asked the following
question, and I am not sure of thie answer.

Is there an ULTIMATE Rubik's cube that, if an algorithm for it was known, it
would contain an algorthm for ANY Rubik's cube?

I guessed that it was four, but I'm not so sure about it.

Aaron Wong
AirWong@AOL.com


From cube-lovers-errors@curry.epilogue.com  Wed May 29 15:25:56 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id PAA02702 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 29 May 1996 15:25:56 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 29 May 1996 10:56:15 +0100
Message-Id: <9605290956.AA05172@mecmdb.me.ic.ac.uk>
X-Sender: ars2@mecmdb.me.ic.ac.uk
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: CUBE-LOVERS@ai.mit.edu
From: "We Love Stress Analysis." <a.southern@ic.ac.uk>
Subject: Ultimate Rubik's Cube. (how to make a 4x4x4)
X-Mailer: <PC Eudora Version 1.4>

I was thinking about something similar to this a while back.

I asked (as did many others) about 4x4x4s, but soon after I sent that E-mail 
I realised that I was holding one with a few extra pieces.

If we can consider a 3x3x3 Rubik's cube as a 2x2x2 with mid-edges and 
centres, in effect we can reverse this and ignore the centres and mid-edges 
of a 3x3x3 thus making it into a 2x2x2. 

Anyone who wanted a 2x2x2 could just pull the stickers from the central 
columns and rows of a 3x3x3. As this makes those pieces indistinguishable, 
they are no longer part of the puzzle.

the relationship between 4x4x4 and 3x3x3 is slightly harder, but the above 
is true for 4x4x4 and 2x2x2 (but if ANYONE tries that with a 4x4x4, I'll hit 
them!!!!!!!).

A more common cube than the 4x4x4 is the 5x5x5 (which is still in 
production, c/o Uwe Meffret). This can be transformed from a 5x5x5 into a 
4x4x4 by removing the central lines of stickers. It can also be transformed 
into a 3x3x3 (why anyone would want to.................) by removing columns 
& rows 2&4 from each side, and 2x2x2 (I won't bother saying it.........) by 
removing columns and rows 2,3,&4 from each side.

Higher orders of cubes aren't in production, but apparently do exist in 
cyberspace, These would display similar properties.

The pattern is simple: smaller cubes with odd number of pieces per side can 
be incorporated with other pieces to form larger cubes with odd number of 
pieces per side. etc. etc. etc. 

2x2x2 + (extras) = 3x3x3
2x2x2 + (extras) = 4x4x4
3x3x3 + 4x4x4 + (extras) = 5x5x5


I'm sure there is some mathematical proof to what I am trying to say, but 
I'm no mathematician.

It might start off: 

                        Pieces          Jump(from last)         used before:    
2x2x2                   8                       8                            
   0
3x3x3                   26                      18                             8
4x4x4                   56                      30                           
   8       
5x5x5                   98                      42                           
   74
6x6x6                   152                     54                           
  ??? 

I would say that the ultimate Rubik cube was in fact the 2x2x2 because it 
features in all the solutions. However, based on this logic, the 8086 is the 
ultimate P.C. as any P.C. can run 8086 software, but an 8086 can't run 80386 
software................





I hope this E-mail hasn't been too scatter brained...................



Andy.







Fact: did you know that British Airways has more Super-Sonic flying time 
than any air force in the world??



From cube-lovers-errors@curry.epilogue.com  Wed May 29 15:27:35 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id PAA02706 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 29 May 1996 15:27:34 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
X-Sender: mag@void.ncsa.uiuc.edu
Message-Id: <v0213051badd22441e39e@[141.142.103.218]>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Wed, 29 May 1996 09:59:23 -0600
To: cube-lovers@ai.mit.edu
From: Tom Magliery <mag@ncsa.uiuc.edu>
Subject: Re: Square 1 Combinations

At 10:11 AM 5/28/96, Michael C. Masonjones wrote:
>On another note, when I signed up, I mentioned to Alan that I must be
>crazy enough to join this group since I have a five foot mockup of a
>rubik's type puzzle as my coffee table.

Neato!

It's long been a carpentry dream of mine to build a giant functioning 3x3x3
Rubik's Cube.  (Just how giant, who knows, but I've usually envisioned
about 1-foot cubies.)  Has anyone ever written up plans or built a giant
cube?

mag

--
.---o  Tom Magliery, Research Programmer                         .---o
`-O-.  NCSA, 605 E. Springfield                  (217) 333-3198  `-O-.
o---'  Champaign, IL 61820          O-        mag@ncsa.uiuc.edu  o---'




From cube-lovers-errors@curry.epilogue.com  Wed May 29 20:41:19 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id UAA03160 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 29 May 1996 20:41:18 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 29 May 1996 17:08:37 -0400 (EDT)
From: Nicholas Bodley <nbodley@sunspot.tiac.net>
To: cube-lovers@ai.mit.edu
Subject: Another subscriber
Message-Id: <Pine.SUN.3.91.960529163546.13009J-100000@sunspot.tiac.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


 Thanks to Alta Vista and Rubik as a keyword, I did an all-nighter over
the holiday weekend, and discovered you folks. I haven't yet downloaded
the archives, but will do my best to be a good Netizen before posting
"real" queries. 

 The first Cube I saw must have been pre-Ideal; I was riding home on the
West Side IRT local in NYC, and noticed someone sitting at the other end
of the car manipulating a puzzle that looked so unbelievable
(mechanically) that I really wondered whether my perceptions had gone
haywire from too many consecutive late bedtimes and regular mornings. It 
was *some* sleep debt! I have little doubt that it was a Cube. 

 When I got mine, I came quite close to solving it by sheer persistence
and brute force (probably about 4 cubies out of position); beginner's
luck! 

 When Meffert was mentioned in (Martin Gardner's col.?) in Sci. Am., I
wrote away for his catalog, which I'm just about sure I still have. I
bought a "5" from him, and sent another check for more items; never
received them. He said Customs must have confiscated them; Customs never
notified me. At the time, I could afford $112 or so. I consider it lost; 
I hope Meffert used it to good advantage. (This would have been around
1987.) It was fascinating to see that he apparently is active once more.

 I've seen "5"s for sale again within the past year or so, I think at The
Compleat Gamester (?) in Waltham, and also The Games People Play in
Cambridge, which has moved (not too far) about a year ago. 

 Does *everybody* know there's a ball inside Rubik's Revenge? 

 I'm at least as much of a gadget-hound as a puzzle-solver; I have a
decent collection. I get a real bang out of dismantling group-theory
puzzles to see how they're built; almost all can be disassembled, although
(as most people probably know) the "2" (Pocket Cube) is quite hard both to
disassemble and to reassemble. I have the Hungarian Globe, which is truly 
impossible to dismantle, IMO. (I haven't dared to scramble it!) This one 
has printed metal surfaces attached to a plastic structure; the "tiles"
take paths like the grooves in the ball inside the "4" (R.R.).

 I hope I might be forgiven for posting one question that has been paining
me-- I'd dearly love to know the answer! Is it true that a physical 
prototype of the "6" (6 X 6 X 6) has been constructed; if so, could 
anyone tell me the approximate date(s) of messages that discuss it? I 
would not want anyone to do lots of searching on my behalf, but just a 
recollection would be welcome. I'm also very curious about the mechanism 
for a "7"; it seems to me that locking pins (or the equivalent) would be 
necessary. I really wonder whether the mechanical design can be practical.

 I'm also a mechanical calculator (See Erez Kaplan's pages on the Web, in
particular) and also mechanical analog computer enthusiast. Paradise was
being a Navy fire control tech. who correctly diagnosed a loose screw
inside the Mk. 1A main battery computer on a destroyer; it took three
weeks to repair. The Master Technician scheduled things well; it happened
just before the ship went in for its every-3-year yard overhaul. 

 I expect to be enjoying this List!
 
NB   Nicholas Bodley   Autodidact & Polymath  |*| Keep smiling! It makes |
      Waltham, Mass.   Electronic Technician  |*|   people wonder what   |
     nbodley@tiac.net    Amateur musician     |*|  you have been up to.  |
-------------------------------------------------------------------------*



From cube-lovers-errors@curry.epilogue.com  Thu May 30 18:15:45 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id SAA05355 for <cube-lovers-outbound@curry.epilogue.com>; Thu, 30 May 1996 18:15:45 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Thu, 30 May 1996 15:23:58 -0400
From: der Mouse <mouse@collatz.mcrcim.mcgill.edu>
Message-Id: <199605301923.PAA18428@Collatz.McRCIM.McGill.EDU>
To: cube-lovers@ai.mit.edu
Subject: Re:  Another subscriber

> I hope I might be forgiven for posting one question that has been
> paining me-- I'd dearly love to know the answer!  Is it true that a
> physical prototype of the "6" (6 X 6 X 6) has been constructed; [...]
> I'm also very curious about the mechanism for a "7"; it seems to me
> that locking pins (or the equivalent) would be necessary.  I really
> wonder whether the mechanical design can be practical.

In my opinion mechanical designs for the 7 and above will have to be
fundamentally different from those for the 6 and below, because that's
the point at which the "buried" corner of a corner cubie extends past
the surface of the face during a face turn and thus it's not possible
to build the thing as rigid pieces connected to a central mechanism, at
least not without cutting away part of some face-center cubies.
(Specifically, that buried corner is at sqrt(2)*(.5-1/N) from the
center, taking the cube side as 1 and N as the order of the cube.  The
face is at .5 from the center.  The former becomes greater than the
latter at about N=6.83...not that non-integer N make physical sense.)

This is not to say that a 7 is impossible, just that it will have to be
rather drastically different - somehow, when a turn is started, the
corner cubie will have to be mechnically locked to the rest of the face
that's turning with it.  I can easily enough imagine possible
mechanisms, but coming up with one simple enough to mass-produce at a
price people are likely to be willing to pay would be a major
challenge.

On the other hand, a straightforward locking mechanism could probably
be put together by a good watchmaking shop at no more than the price of
a high-end watch.  A few collectors might go for it, especially since
the result - particularly if made out of metal - would feel much better
than the plastic-on-plastic feel of most cubes.

					der Mouse

			    mouse@collatz.mcrcim.mcgill.edu


From cube-lovers-errors@curry.epilogue.com  Thu May 30 18:15:15 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id SAA05351 for <cube-lovers-outbound@curry.epilogue.com>; Thu, 30 May 1996 18:15:14 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
To: Cube-Lovers@AI.MIT.EDU
From: Wei-Hwa Huang <whuang@cco.caltech.edu>
Subject: Re: Another subscriber
Date: 30 May 1996 05:53:22 GMT
Organization: California Institute of Technology, Pasadena
Lines: 31
Message-Id: <4ojd4i$g2o@gap.cco.caltech.edu>
References: <cube-lovers.Pine.SUN.3.91.960529163546.13009J-100000@sunspot.tiac.net>
Nntp-Posting-Host: accord.cco.caltech.edu
X-Newsreader: NN version 6.5.0 #12 (NOV)

As a first aside, I'd like to mention that a nice project was to get a
standard 3x3x3 cube into a standard American spaghetti sauce jar.  Makes
a good conversation piece, though hard to scramble quickly...

Nicholas Bodley <nbodley@sunspot.tiac.net> writes:
> I'm at least as much of a gadget-hound as a puzzle-solver; I have a
>decent collection. I get a real bang out of dismantling group-theory
>puzzles to see how they're built; almost all can be disassembled, although
>(as most people probably know) the "2" (Pocket Cube) is quite hard both to
>disassemble and to reassemble. I have the Hungarian Globe, which is truly 
>impossible to dismantle, IMO. (I haven't dared to scramble it!) This one 
>has printed metal surfaces attached to a plastic structure; the "tiles"
>take paths like the grooves in the ball inside the "4" (R.R.).

I feel compelled to mention that there's a small company in Taiwan which
makes two variants of the Hungarian Globe that are harder.  One variant
allows for a move that turns the 9 pieces on one side; the other variant
allows for the 5 pieces at every intersection to be rotated.

Let me dig out the address...

International Puzzles and Games
Fl. 3 No. 192 Chung Ching N. Rd. Sec 2
Taipei Taiwan, Republic of China
Tel: 886-2-5532575
Fax: 886-2-5536757

-- 
Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
---------------------------------------------------------------------------
Caught Porfiry, Raskolnikov sung his swan Sonia when he went Dounia to Siberia.


From cube-lovers-errors@curry.epilogue.com  Fri May 31 02:25:14 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id CAA06390 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 31 May 1996 02:25:14 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <31AE492B.6FC7@erols.com>
Date: Thu, 30 May 1996 21:19:39 -0400
From: Charlie Dickman <charlied@erols.com>
Reply-To: charlied@erols.com
X-Mailer: Mozilla 2.01 (Macintosh; U; 68K)
Mime-Version: 1.0
To: Cube-Lovers <Cube-Lovers@ai.mit.edu>
Subject: Re: An Ultimate Cube
References: <31ADF6C2.28E3@is.ge.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

On the subject of an ultimate cube...
 
There can not possibly be an ultimate cube just like (because) there is
no "ultimate", ie., largest, integer.  But if you can solve the
(N+1)x(N+1)x(N+1) cube then you can surely solve the NxNxN cube. You
would simply reduce the (N+1)x(N+1)x(N+1) permutation to one that is in
the NxNxN group and continue from there like MBW did when looking for
God's algorithm in the 3x3x3 group.
 
The group of an NxNxN cube is a proper subgroup of an (N+1)x(N+1)x(N+1)
cube. For example, the 2x2x2 cube group is the 3x3x3 group minus the
edge moves and the center cubie orientation moves - that is, as
Singmaster pointed out, it is just the corners of the 3x3x3 cube. Adding
the 3rd cut added 2 additional types of cubies to the 2x2x2 cube, the
edges and the centers, and along with them came the edge moves (to form
the group of the 3x3x3 cube) and the center orientations (to form the
3x3x3 super-group). The edge moves alone are a proper subgroup of the
cube group and the cube group is a proper subgroup of the super-group.
 
A similar situation occurs when you go from the 3x3x3 cube to the 4x4x4
cube. If you constrain the cube so that the central 2 slices can not be
moved independently of one another then the 2 central edge pieces act
exactly like the edges of a 3x3x3 cube and the 4 face center pieces act
exactly like the face centers of the 3x3x3 cube. When the central slices
are allowed to move independently of one another permutations are added
to the 3x3x3 group and super-group to make up the 4x4x4 group and
super-group. Thus the 3x3x3 groups are proper subgroups of the 4x4x4
groups.

The pattern continues as the value of N increases with the N+1 group
being larger than the N group and properly containing the N group. So
the answer is no, there is no ultimate cube.


From cube-lovers-errors@curry.epilogue.com  Fri May 31 02:24:27 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id CAA06383 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 31 May 1996 02:24:26 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <9605310001.AA29475@SSD.intel.com>
Cc: cube-lovers@ai.mit.edu
Subject: realizing 7x7x7 or larger cubes
In-Reply-To: Your message of "Thu, 30 May 96 15:23:58 EDT."
             <199605301923.PAA18428@Collatz.McRCIM.McGill.EDU> 
Date: Thu, 30 May 96 17:00:59 -0700
From: Scott Huddleston <scotth@ssd.intel.com>


>In my opinion mechanical designs for the 7 and above will have to be
>fundamentally different from those for the 6 and below, because that's
>the point at which the "buried" corner of a corner cubie extends past
>the surface of the face during a face turn and thus it's not possible
>to build the thing as rigid pieces connected to a central mechanism, at
>least not without cutting away part of some face-center cubies.

One solution to this dilemma is to let some of the "cubies" become
"brickies" (i.e., rectangular bricks instead of cubes).  In this approach,
there's no limit in principle on N to how large an NxNxN puzzle you could
build with the standard mechanism.  There is, of course, the lower limit 
you just described to how small the corner cubies could become.


From cube-lovers-errors@curry.epilogue.com  Fri May 31 16:05:37 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id QAA07784 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 31 May 1996 16:05:37 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <199605311941.PAA17615@zaphod.caz.ny.us>
X-Mailer: exmh version 1.6.2 7/18/95
To: charlied@erols.com
Cc: Cube-Lovers <Cube-Lovers@ai.mit.edu>
Reply-To: bmbuck@acsu.buffalo.edu
Subject: Re: An Ultimate Cube 
In-Reply-To: Your message of "Thu, 30 May 1996 21:19:39 EDT."
             <31AE492B.6FC7@erols.com> 
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Date: Fri, 31 May 1996 15:41:34 -0400
From: Buddha Buck <phaedrus@dreamscape.com>

> On the subject of an ultimate cube...
>  
> There can not possibly be an ultimate cube just like (because) there is
> no "ultimate", ie., largest, integer.  But if you can solve the
> (N+1)x(N+1)x(N+1) cube then you can surely solve the NxNxN cube. You
> would simply reduce the (N+1)x(N+1)x(N+1) permutation to one that is in
> the NxNxN group and continue from there like MBW did when looking for
> God's algorithm in the 3x3x3 group.

I would not necessarily agree with the assertion that if one can solve 
an N^3 cube, one can solve an (N-1)^3 cube.

Your construction, of solving the N^3 cube into a subgroup that is 
homeomorphic to the (N-1)^3 cube, assumes that one already knows how to 
solve a (N-1)^3 cube. 

>  
> The group of an NxNxN cube is a proper subgroup of an (N+1)x(N+1)x(N+1)
> cube. For example, the 2x2x2 cube group is the 3x3x3 group minus the
> edge moves and the center cubie orientation moves - that is, as
> Singmaster pointed out, it is just the corners of the 3x3x3 cube. Adding
> the 3rd cut added 2 additional types of cubies to the 2x2x2 cube, the
> edges and the centers, and along with them came the edge moves (to form
> the group of the 3x3x3 cube) and the center orientations (to form the
> 3x3x3 super-group). The edge moves alone are a proper subgroup of the
> cube group and the cube group is a proper subgroup of the super-group.

True, and I will conceed that if you know how to solve a 3x3x3, you can 
solve a 2x2x2.
>  
> A similar situation occurs when you go from the 3x3x3 cube to the 4x4x4
> cube. If you constrain the cube so that the central 2 slices can not be
> moved independently of one another then the 2 central edge pieces act
> exactly like the edges of a 3x3x3 cube and the 4 face center pieces act
> exactly like the face centers of the 3x3x3 cube. When the central slices
> are allowed to move independently of one another permutations are added
> to the 3x3x3 group and super-group to make up the 4x4x4 group and
> super-group. Thus the 3x3x3 groups are proper subgroups of the 4x4x4
> groups.

Yes, the 3x3x3 groups are proper subgroups (or, probably more 
accurately, homeomorphic to proper subgroups) of the 4x4x4 groups, but 
that doesn't mean that knowing how to solve the 4x4x4 allows one to 
solve the 3x3x3.

For instance, I can solve a 4x4x4.  However, my solution to the 4x4x4 
involves slice moves that don't exist on a 3x3x3 cube, through all 
stages of my solution, including the final stage.  I cannot directly 
apply my 4x4x4 solution to a 3x3x3 cube.  (I can to the 2x2x2 cube, 
since the techniques for solving the corners are applicable to cubes of 
all order N).  If my solution for solving the 4x4x4 involved reducing 
it to the subgroup of the 4x4x4 generated by face turns only, then yes, 
I could directly solve a 3x3x3 by the methods I use for a 4x4x4, but I 
don't.

> The pattern continues as the value of N increases with the N+1 group
> being larger than the N group and properly containing the N group. So
> the answer is no, there is no ultimate cube.

The question originally asked (by Aaron Wong) was "Is there an ULTIMATE 
Rubik's cube that, if an algorithm for it was known, it would contain 
an algorthm for ANY Rubik's cube?"

There might be no answer to the general question of if -any- algorithm 
was known for the U^3 cube, than an algorithm could be derived for any 
N^3 cube.  For instance, few here would argue the assertion that if you 
can solve a 3x3x3, you can solve a 2x2x2, but from the discriptions 
I've heard of it, I wonder how well Thistlewaite's algorithm would work 
on a 2x2x2 cube.

A Thistlewaite type algorithm for a (2N)^3 cube might very well reduce 
the (2N)^3 cube to the subgroup that is equivilant to a 2^3 cube in its 
final stages.  Such an algorithm would be totally unsuited for solving 
a (2M+1)^3 cube, because there would be no way to reduce that to a 2^3 
cube.  (In general, I would guess that any algorithm for an n^3 cube 
that involved reducing it to an m^3 cube, where n = km, would be 
unsuited for solving a l^3 cube, where l does not have n or m as a 
factor).

However, I think the question can be divided into two parts, if we look 
at it differently (requiring the existance of an algorithm with the 
stated property for order U^3 cubes, rather than requiring that all 
algorithms for order U^3) cubes have the stated property):  First, is 
there a general algorithm that can be used to solve cubes of all 
orders?  I think the answer is "yes".  Second, what is the smallest 
order U^3 cube requiring a complete description of the algorithm?  I 
think the answer is U=5.

My current solution for the 4^3 cube is very closely related to my current solution for the 3^3.  There are only minor changes in one stage, major changes in another, (both to deal with the split edge pieces) and the addition of a completely new stage to handle the centers, which aren't in the 3^3 at all.  Transforming this algorithm to the 5^5 and higher is relatively easy, once I have the 3^3 and 4^4 down.  All the important components of the two lower order solutions are needed for the 5^5, and nothing really new is added.  The same goes for the higher orders.  The tedium of solving increases, but not the real difficulty.

I have been thinking (but haven't done much yet) of writing a collection of web pages describing my general solution (at least, for the 2^3, 3^3, and 4^4 cubes).

-- 
     Buddha Buck                      bmbuck@acsu.buffalo.edu
"She was infatuated with their male prostitutes, whose members were
like those of donkeys and whose seed came in floods like that of
stallions."  -- Ezekiel 23:20




From cube-lovers-errors@curry.epilogue.com  Fri May 31 16:05:07 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id QAA07780 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 31 May 1996 16:05:06 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
To: Cube-Lovers@AI.MIT.EDU
From: Wei-Hwa Huang <whuang@cco.caltech.edu>
Subject: Re: Another subscriber
Date: 31 May 1996 07:30:49 GMT
Organization: California Institute of Technology, Pasadena
Lines: 19
Message-Id: <4om779$aip@gap.cco.caltech.edu>
References: <cube-lovers.199605301923.PAA18428@Collatz.McRCIM.McGill.EDU>
Nntp-Posting-Host: accord.cco.caltech.edu
X-Newsreader: NN version 6.5.0 #12 (NOV)

der Mouse <mouse@collatz.mcrcim.mcgill.edu> writes:
>In my opinion mechanical designs for the 7 and above will have to be
>fundamentally different from those for the 6 and below, because that's
>the point at which the "buried" corner of a corner cubie extends past
>the surface of the face during a face turn and thus it's not possible
>to build the thing as rigid pieces connected to a central mechanism, at
>least not without cutting away part of some face-center cubies.
>(Specifically, that buried corner is at sqrt(2)*(.5-1/N) from the
>center, taking the cube side as 1 and N as the order of the cube.  The
>face is at .5 from the center.  The former becomes greater than the
>latter at about N=6.83...not that non-integer N make physical sense.)

There's a really simple solution to this.  Just don't make the 7 slices
evenly spaced.

-- 
Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
---------------------------------------------------------------------------
Caught Porfiry, Raskolnikov sung his swan Sonia when he went Dounia to Siberia.


From cube-lovers-errors@curry.epilogue.com  Sat Jun  1 00:18:13 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id AAA08704 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 1 Jun 1996 00:18:13 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <2.2.32.19960601020111.009ebee0@greatdane.cisco.com>
X-Sender: ronnie@greatdane.cisco.com
X-Mailer: Windows Eudora Pro Version 2.2 (32)
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Fri, 31 May 1996 19:01:11 -0700
To: Scott Huddleston <scotth@ssd.intel.com>
From: "Ronnie B. Kon" <ronnie@cisco.com>
Subject: Re: realizing 7x7x7 or larger cubes
Cc: cube-lovers@ai.mit.edu

At 05:00 PM 5/30/96 -0700, Scott Huddleston wrote:
>
>>In my opinion mechanical designs for the 7 and above will have to be
>>fundamentally different from those for the 6 and below, because that's
>>the point at which the "buried" corner of a corner cubie extends past
>>the surface of the face during a face turn and thus it's not possible
>>to build the thing as rigid pieces connected to a central mechanism, at
>>least not without cutting away part of some face-center cubies.
>
>One solution to this dilemma is to let some of the "cubies" become
>"brickies" (i.e., rectangular bricks instead of cubes).  In this approach,
>there's no limit in principle on N to how large an NxNxN puzzle you could
>build with the standard mechanism.  There is, of course, the lower limit 
>you just described to how small the corner cubies could become.

I've had this dream of making cubies which attach (via bars or perhaps
electromagnets) to their neighbors, with the smarts to detect the torque of
a turn and release until the turn has been completed.  You could then sell
corner cubies, edge cubies, face cubies, and internal cubies one-at-a-time
and people could build their own puzzles as large as they wanted.

I'll buy enough for an order 10 cube if anyone cares to make this.  :-)

                        Ronnie



From cube-lovers-errors@curry.epilogue.com  Sat Jun  1 00:17:48 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id AAA08700 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 1 Jun 1996 00:17:47 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Fri, 31 May 1996 21:27:05 -0400 (EDT)
From: Nicholas Bodley <nbodley@sunspot.tiac.net>
To: Wei-Hwa Huang <whuang@cco.caltech.edu>
Cc: Cube-Lovers@ai.mit.edu
Subject: Cube in a jar
In-Reply-To: <4ojd4i$g2o@gap.cco.caltech.edu>
Message-Id: <Pine.SUN.3.91.960531212345.2474A-100000@sunspot.tiac.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On 30 May 1996, Wei-Hwa Huang wrote:

> As a first aside, I'd like to mention that a nice project was to get a
> standard 3x3x3 cube into a standard American spaghetti sauce jar.  Makes
> a good conversation piece, though hard to scramble quickly...

When one does this, is it OK to dismantle the Cube, and then reassemble 
it within the jar? (I assume not).

{Snips}
> Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
> 
Regards to all,

NB   Nicholas Bodley   Autodidact & Polymath  |*| Keep smiling! It makes |
      Waltham, Mass.   Electronic Technician  |*|   people wonder what   |
     nbodley@tiac.net    Amateur musician     |*|  you have been up to.  |
-------------------------------------------------------------------------*



From cube-lovers-errors@curry.epilogue.com  Sat Jun  1 01:40:03 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id BAA08874 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 1 Jun 1996 01:40:01 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sat, 1 Jun 1996 00:34:50 -0400 (EDT)
From: Nicholas Bodley <nbodley@sunspot.tiac.net>
To: der Mouse <mouse@collatz.mcrcim.mcgill.edu>
Cc: cube-lovers@ai.mit.edu
Subject: Locking mechanism for a 7^3 or larger (some thoughts) (fairly long)
In-Reply-To: <199605301923.PAA18428@Collatz.McRCIM.McGill.EDU>
Message-Id: <Pine.SUN.3.91.960531220337.2474E-100000@sunspot.tiac.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


 Some years ago, I think I remember reading (in Douglas Hofstadter's 
second (?) "major" book, as I think of them) that someone had designed a 
mechanism for a 7^3. When I started this message, I thought I'd offer a 
description of such a mechanism to the members of this list, but then 
realized that the problem is even harder than I thought. I hope these 
thoughts are not a waste of bitspace; let me know if so!

 Evidently, the design Hofstadter (probably) alluded to is not generally 
known to this List's members. Perhaps he could enlighten us.

 Also, one wonders whether Erno Rubik has contemplated the mechanical 
design for a 7^3.

 Edge cubies could be retained by schemes such as are now used, but only
until they are moved out "into midair"; then they have one or two rubbing
surfaces completely exposed, so to speak. The mechanism for retaining them
is probably closely related to that for retaining corner cubies when out
of alignment. Once the scheme for retaining corners is worked out, then a
minor variant might be what's needed for the edges. (Or possibly 
conversely...)

 (Ideally, one would not want to prohibit an inner slice from being 
rotated all by itself; less-clever locking schemes might require that 
no more than one plane in the whole Cube be sheared at once.)

 For a first try, the corners would be retained by three locking pins to 
hold them in alignment with their neighbors. However, the problem is to 
retract one of the three pins before shearing an outside layer with 
respect to its neighbor. Until the pin is retracted, you can't shear the 
layer by much! Furthermore, that surface has to be locked once more when 
the corner is realigned, and this must happen automatically, reliably, 
and quickly. IMHO, it takes someone like Mr. Rubik to invent such a 
mechanism, and it might be one of the most difficult to invent yet.

 In the next few paragraphs, I get into speculative electronic/mechanical 
engineering, but try not to presume specialized knowledge any more than 
necessary.

 If one allows an electronic/mechanical scheme, cost balloons, and one has
the disgusting thought of a battery to power things. Sliding contacts to
distribute power from one central battery are bound to be unreliable
unless carefully maintained; they would be a pain. 

 They also would constitute an interesting problem in their own right: Can
power be distributed without short circuits caused 1) by intermediate
physical relative positions, and 2) by any possible configuration of a
Cube? Keep in mind that two paths for current are needed, and they must
never intersect. This is an interesting problem in topology, if I'm
thinking correctly. A related problem is to ask whether every cubie could
always have power connected to it. 

 The thought of a small battery inside each corner and each edge cubie 
(or every other one) is even more painful. 

 But, if there were power inside, here's what could be done. The locking
pins would have a certain amount of "give", to permit limited shear
movement. They could be mounted so they could tilt slightly (say, 10
degrees max.) against spring tension, and their mating sockets could be
narrow "funnels", wide end at the surface. 

 Some sort of sensor would detect misalignment well before the limit of
"give" was reached. Misalignment would cause internal electronics to apply
a pulse to a coil to retract the locking pin. (The pin should have minimal
friction; a polished surface and a Teflon-lined mating hole should do.)
Once the pin was retracted, the electronics would ignore other
misalignments. (Otherwise, one could simply push against a cubie in 
"midair" and detach it!)

 The pin would be kept both extended and retracted magnetically, by a 
remanent alloy that stays magnetized, but which can have its 
magnetization reversed by the flux from a coil. Extending the pin would 
be done by pulsing the coil with the opposite polarity. (The principle is 
closely-related to pulsed magnetic latching relays, which do not require 
continuous coil power in either of their states.)

 As has been implied, once the cubie is realigned, a second 
(reverse-polarity) pulse re-extends the locking pin.

 Pulsed operation should give acceptable battery life; the misalignment
sensor might be somewhat of a challenge to engineer, but not a major
problem. One could consider mechanical contacts; with electronics, they 
wouldn't need to be kept scrupulously clean, only clean enough to permit 
a milliampere or so to flow. (Contamination becomes a factor if you make 
the electronics too sensitive.)

 The electronics seems quite straightforward, and by today's standards,
quite simple and entirely practical. The locking-pin mechanism would be
the most costly, more than likely; it would have to be custom-built, and
might cost $2 US apiece in 10,000 lots, perhaps more. I can imagine many
people-weeks of development to create a decently-reliable locking-pin
design. It's essentially a miniature solenoid. 

 Battery access would be via a screw-threaded cover with a slot that fits 
the edge of a coin; the Cube would look distinctive.

 The clicking sound of the retaining pins would be interesting!

 It's not immediately obvious (to me) how the pins and mating sockets 
should be arrayed; their number must be minimal. Edge cubies would need 
four locks apiece, while corners would need three apiece.

 The mind wants sleep, so I think I'll give this mad message a quick 
proofread and post it.

---------------------
On Thu, 30 May 1996, der Mouse wrote:

{Snips}

> > that locking pins (or the equivalent) would be necessary.  I really

{Snips}

> 
> On the other hand, a straightforward locking mechanism could probably
> be put together by a good watchmaking shop at no more than the price of

> 			    mouse@collatz.mcrcim.mcgill.edu

Best regards to all,

NB   Nicholas Bodley   Autodidact & Polymath  |*| Keep smiling! It makes |
      Waltham, Mass.   Electronic Technician  |*|   people wonder what   |
     nbodley@tiac.net    Amateur musician     |*|  you have been up to.  |
-------------------------------------------------------------------------*





From cube-lovers-errors@curry.epilogue.com  Sat Jun  1 01:40:27 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id BAA08881 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 1 Jun 1996 01:40:26 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sat, 1 Jun 1996 01:01:26 -0400 (EDT)
From: Nicholas Bodley <nbodley@sunspot.tiac.net>
To: Wei-Hwa Huang <whuang@cco.caltech.edu>
Cc: Cube-Lovers@ai.mit.edu
Subject: Re: Another subscriber
In-Reply-To: <4om779$aip@gap.cco.caltech.edu>
Message-Id: <Pine.SUN.3.91.960601005206.2474H-100000@sunspot.tiac.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On 31 May 1996, Wei-Hwa Huang wrote:

{Snips}

> der Mouse <mouse@collatz.mcrcim.mcgill.edu> writes:
> >In my opinion mechanical designs for the 7 and above will have to be
> >fundamentally different from those for the 6 and below, because that's



> There's a really simple solution to this.  Just don't make the 7 slices
> evenly spaced.


> -- 
> Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
_____________________

 Large corner cubies, and rectangular edge pieces to match, when seen 
face-on, right?

 Has anyone worked out the innards? Perhaps a further extension of the
scheme used for the 5^3? (If so, the retaining "foot" on a corner cubie
would have a truly wondrous shape! The "foot" of a 5^3 is quite
impressive.)

 I should have read this earlier; it might have saved bitspace from my 
mad electronic/mechanical scheme! :) It would also be quieter...

My best to all,

NB   Nicholas Bodley   Autodidact & Polymath  |*| Keep smiling! It makes |
      Waltham, Mass.   Electronic Technician  |*|   people wonder what   |
     nbodley@tiac.net    Amateur musician     |*|  you have been up to.  |
-------------------------------------------------------------------------*



From cube-lovers-errors@curry.epilogue.com  Sat Jun  1 16:37:55 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id QAA12114 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 1 Jun 1996 16:37:54 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
To: Cube-Lovers@AI.MIT.EDU
From: Wei-Hwa Huang <whuang@cco.caltech.edu>
Subject: Re: realizing 7x7x7 or larger cubes
Date: 1 Jun 1996 09:22:10 GMT
Organization: California Institute of Technology, Pasadena
Lines: 32
Message-Id: <4op242$5mh@gap.cco.caltech.edu>
References: <cube-lovers.2.2.32.19960601020111.009ebee0@greatdane.cisco.com>
Nntp-Posting-Host: accord.cco.caltech.edu
X-Newsreader: NN version 6.5.0 #12 (NOV)

First, as a comment on the other thread, I think it is safe to say:

If one can solve an (2n+1)^3 cube, then one can solve a (2n)^3 cube.

"Ronnie B. Kon" <ronnie@cisco.com> writes:
>I've had this dream of making cubies which attach (via bars or perhaps
>electromagnets) to their neighbors, with the smarts to detect the torque of
>a turn and release until the turn has been completed.  You could then sell
>corner cubies, edge cubies, face cubies, and internal cubies one-at-a-time
>and people could build their own puzzles as large as they wanted.

It would certainly require a very creative design for the corners; your
description seems to say that in the stable state the corners are not
attached by anything!

Perhaps corner cubies could be equipped with buttons that had to be
depressed before a face would turn?
For instance, imagine a cube with three faces that have a button on
the middle, each one triggering a bar on the opposite side.  When a button
is pressed, the bar retracts into the cube.  This would make a 
workable corner cube, although it would be a bit awkward to press the
face that you wanted to turn!

As another aside, I don't understand the rationale behind the canonical
4x4x4 design.  It would seem to me that it's better to have two rings of
grooves in each dimension, so that the face pieces could have "fatter"
legs and not break off as easily.

-- 
Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
---------------------------------------------------------------------------
Caught Porfiry, Raskolnikov sung his swan Sonia when he went Dounia to Siberia.


From cube-lovers-errors@curry.epilogue.com  Sat Jun  1 16:43:04 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id QAA12140 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 1 Jun 1996 16:43:03 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
To: Cube-Lovers@AI.MIT.EDU
From: Wei-Hwa Huang <whuang@cco.caltech.edu>
Subject: Yet another (silly) idea on realizing the 7x7x7
Date: 1 Jun 1996 20:38:23 GMT
Organization: California Institute of Technology, Pasadena
Lines: 8
Message-Id: <4oq9nv$l8m@gap.cco.caltech.edu>
Nntp-Posting-Host: accord.cco.caltech.edu
X-Newsreader: NN version 6.5.0 #12 (NOV)

Hey, if the corners are going to fall off, let them!  After all,
anyone who actually bothers to buy a 7x7x7 should know how to solve
the corners...  :)

-- 
Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
---------------------------------------------------------------------------
Caught Porfiry, Raskolnikov sung his swan Sonia when he went Dounia to Siberia.


From cube-lovers-errors@curry.epilogue.com  Sun Jun  2 04:12:01 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id EAA14161 for <cube-lovers-outbound@curry.epilogue.com>; Sun, 2 Jun 1996 04:12:01 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sun, 2 Jun 96 00:17:03 EDT
From: hoey@aic.nrl.navy.mil
Message-Id: <9606020417.AA04623@sun13.aic.nrl.navy.mil>
To: Jerry Bryan <jbryan@pstcc.cc.tn.us>
Cc: Cube-Lovers <cube-lovers@ai.mit.edu>
Subject: Re: Compact Cube Representation for Shamir and Otherwise

I'm not sure this is so interesting to all of cube-lovers; e-mail me
if you have opinions pro or con.

Jerry writes of the standard S24 x S24 model, which uses 48 bytes per
position without packing.  He also has a "supplement" representation
that uses one facelet from each edge and corner, for 20 bytes.  He
packs them into 13 bytes on tape.

The way I did it the last time I worked on brute force was to
pack eight twelve-bit fields:

     The orientations in two twelve-bit fields (2^11 and 3^7),
     The edge permutation in four twelve-bit fields,
        each of three base-12 digits (12^3), and
     The corner permutation in two twelve-bit fields, each of
        four base-8 digits (8^4).

Unpacking the fields can be done with native arithmetic or table
lookup.  In the latter case, it is better to use 12*11*10 instead of
12^3 and 8*7*6*5 instead of 8^3.

Also, postmultiplying by a fixed permutation can be done with table
lookup without unpacking.  I used this feature for twelve permutations
of particular interest.

I am somewhat rusty on the implications of using this representation
in conjunction with Shamir's algorithm.  I think it provides an
ordering of the permutations that enables at least an approximation to
the random access you need, then you unpack it and do a better job.

Dan Hoey
Hoey@AIC.NRL.Navy.Mil


From cube-lovers-errors@curry.epilogue.com  Tue Jun  4 14:07:52 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA04174 for <cube-lovers-outbound@curry.epilogue.com>; Tue, 4 Jun 1996 14:07:51 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Tue, 4 Jun 1996 08:35:17 -0400 (EDT)
From: Nicholas Bodley <nbodley@sunspot.tiac.net>
To: Wei-Hwa Huang <whuang@cco.caltech.edu>
Cc: Cube-Lovers@ai.mit.edu
Subject: Fragile parts in 4^3
In-Reply-To: <4op242$5mh@gap.cco.caltech.edu>
Message-Id: <Pine.SUN.3.91.960604083008.2537A-100000@sunspot.tiac.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On 1 Jun 1996, Wei-Hwa Huang wrote:

{Mostly snipped}

> As another aside, I don't understand the rationale behind the canonical
> 4x4x4 design.  It would seem to me that it's better to have two rings of
> grooves in each dimension, so that the face pieces could have "fatter"
> legs and not break off as easily.
> 
> Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/

  It probably isn't necessary for the legs to be so thin; the mechanical 
engineer probably had optimistic estimates of the likely forces and the 
strength of the particular polymer used. The latter isn't, by any means, 
cheap stuff.

 Wider legs might still meet the constraints that ensure the Cube not fall 
apart.

 (Sorry for a slow reply.)

Regards to all,

NB Nicholas Bodley Autodidact & Polymath |*| Keep smiling! It makes |
      Waltham, Mass.   Electronic Technician  |*|   people wonder what   |
     nbodley@tiac.net    Amateur musician     |*|  you have been up to.  |
-------------------------------------------------------------------------*



From cube-lovers-errors@curry.epilogue.com  Tue Jun  4 18:29:55 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id SAA04761 for <cube-lovers-outbound@curry.epilogue.com>; Tue, 4 Jun 1996 18:29:54 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Tue, 4 Jun 1996 18:08:15 -0400
From: Jim Mahoney <mahoney@marlboro.edu>
Message-Id: <199606042208.SAA13307@ marlboro.edu>
To: Cube-Lovers <cube-lovers@ai.mit.edu>
Subject: A essay on the NxNxN Cube : counting positions and solving it


        Thoughts on the NxNxN Cube
        --------------------------

Lately I've seen a few comments here on the NxNxN cube, how to build
one, and how what an algorithm to solve one might look like.  I have
no idea how the inside mechanics should work, nor have I made
significant progress thinking about how to find God's Algorithm for
these guys, but I did work out a recipe for solving the NxNxN, way
back in 1981, and worked out the number of possible positions.
Perhaps given those questions this is the right time to post a synopsis.


My approach is rather pedestrian, and I wave my hands quite a lot,
but I'm confident that an an arbitrarily large cube can be 
unscrambled with the method I describe below.

But first, since this is the first time I've posted to this discussion
group, I guess I should say who I am.  I wrote my undergraduate thesis
on Rubik's Cube fifteen years ago, as part of a math/physics degree.
Ironically, even though I was at MIT and this mailing list is based
there, too, I never knew of it until this year, when I started
(slowly) reading through the archives of this mailing list.  There's a
lot there, and not all of it is exactly quick reading.

These days I teach physics and astronomy at Marlboro College, where I
have occasionally taught an "ideas of group theory" course based on
puzzles like TopSpin and Rubik's Cube, designed to show mostly
non-math majors why group theory is so pretty.  I see from previous
posts that other people have taught similar courses.

Anyway, what follows is one way of thinking about the NxNxN.  Much of
this isn't new, but perhaps it hasn't been said quite this way, and
will therefore be worth saying.  Hope it isn't too long-winded, and
that I don't offend the folks who've posted similar things already by
not referencing them; as I said, I've swallowed some but not all of
the 1500 or so posts to this mailing list.


======================================================================
(I) The Cube Itself  =================================================
======================================================================

First, I will envision the NxNxN Cube (the whole thing) as a solid,
transparent array of N^3 cubies (the pieces its made of), most of
which are 'hidden' on the inside.  (For example, this would imply that
the the 3x3x3 cube has a single hidden cubie at the center.)  All the
real mechanical 3x3x3, 4x4x4, 5x5x5 Cubes that I've seen only have
cubies on the outside, but if you can put back all N^3 cubies in the
one I'm describing then you can certainly do the real ones.  

(In Dan Hoey's notation, I believe that this means I treat the Cube as
the G+C group, where G is generated by the outer slice rotations, and
C is the rotations of the entire thing.  I am not including spatial
inversions, because I'm physicall obtainable positions here.  And
while I agree that G is what I see on the 3x3x3, I think that what I
describe here is a more general and elegant approach to the NxNxN.)

Second, let a 'move' be a rotation of any plane of cubies, including
the interior slices.  There are 3N of these planes, and each has NxN
cubies in it.  Since I'm not going to try to count moves here, it
doesn't matter whether you consider a half turn as one move or two
quarter turns.  The slices are numbered from 1 to N, so that rotating
the 1-slice or N-slice is a rotation of an outside face, while the
(N+1)/2 slice is through the center of an odd Cube.  (I chose this
convention rather than numbering at zero in the center because it lets
me talk about the N'th-layer, as defined below, and the N'th-slice in
the same breath without getting myself confused.)

Third, I imagine that each of face of each cubie has a distinct color,
which I will take as usual to be (Front, Back, Up, Down, Left, Right),
and that the unique 'solved' position has all N^3 cubies in the same
orientation, with their colors all aligned.


======================================================================
(II) Layers, Orbits, and Types =====================================
======================================================================

Now I would like to see how many different kinds of cubies there are,
where they live, and how they behave.  

The first thing to notice is that there are two distinct kinds of
NxNxN Cubes, depending on whether N is even or odd.  For N odd, there
is a single cubie at the center (which I will call the 1-layer),
surrounded by the cubies on the outside of the 3x3x3 (which I will
call the 3-layer), which in turn are surrounded by those cubies on the
outside of the 5x5x5 Cube (the 5-layer), and so on until I reach the
outermost N-layer.  When N is even, the innermost layer is 2x2x2,
which is surrounded by a 4x4x4 "4-layer", and so on.  Thus the entire
Cube is made up of disjoint layers which are either all odd or all
even.  Moreover, it is easy to see that the cubies on a given layer
always stay on that layer; the allowed rotations cycle cubies within a
layer but never between layers.

Next, I will define any complete set of cubies that can move into each
other's position as an "orbit."  (This name is at least suggestive of
the group theory notion of a closed sequence of elements.)  For
example, the 8 corner cubies on the 3x3x3 Cube form one orbit since
any one of those cubies can be put in any of those eight positions.
Likewise, the 12 edge cubies on the 3x3x3 form another orbit.

Finally, distinct orbits which have similar properties will be called
members of the same "type."  For example, the 4x4x4 Cube has an orbit
of eight outer corners on the 4-layer, and a second orbit of eight
corner cubies on the inside, in the 2-layer.  Although these sets
of cubies are in distinct orbits, they are both "Corner" types.
(I know that my notion of what exactly "similar properties" means
is vague here, but I think the general idea is clear.)

One approach to solving the cube, then, is to identify each kind of
type - it turns out there aren't very many - and find some method of
manipulating the cubies in an orbit of that type without disturbing
any other the rest of the Cube.  I'll explain one way to do this
further down, after listing the different types.


======================================================================
(III) The Eight Types ==============================================
======================================================================

Without further ado, here they are.

Name         What:
------       ------

 Central        The unique cubie in the center of Cubes with N odd.

 Corner         Corners in each layer.  In each layer there is 
                1 corner orbit consisting of 8 cubies, each of
                which can be in 3 orientations in each of 8 positions. 
                (8 positions x 3 orientations = 24 total.)
                However, while all 8! position rearrangements are
                permissible, all rotations are not; as is well known, 
                only 1/3 of them are.
                One way to see this is to define "twist" state
                as (0,1,2) for each orientation of a cubie at a 
                corner, and to notice that the sum of all these states
                isn't changed by a single move.  This means that 
                you cannot turn just one corner in place.

 Edge-Single    The ones like the outer edges on the 3x3x3.
                In each odd layer there is 1 of these orbits,
                consisting of 12 cubies, each of which can be in 2 states.
                (12 positions x 2 orientations = 24 total.)
                All 12! placements are accessible, but again only
                some of the flips; you cannot turn just one edge.

 Face-Center    The cubies like the centers of the 3x3x3 face.
                In each odd layer there is on of these orbits,
                which has 6 cubies each of which can be in 4 rotation
                states. (12 places x 4 states each = 24 total.)
                This time all rotations are possible; however, the
                cubies can only move in space as a rigid whole, and
                therefore there are 24 different positions 
                for these cubies, which are completely determined 
                by the orientation of the central cubie.

 Edge-Double,
 Face-Corner,
 Face-Edge,
 Face-Offset
                Each of these orbits consists of exactly 24 cubies, 
                as shown in the pictures below.  There are in general 
                many of each of these orbits in each layer, as given by 
                the formulae (simple geometry and counting - see
                the diagrams) in the table below.  
                *None* of these cubies in these orbits 
                can "flip" or "twist" in place like the Corners 
                and Single Edges do; in every case there are exactly
                24 cubies which implies that there must be only 
                one orientation at each possible position.  Another
                way to see this is to draw in an orientation on 
                each cubie of a given orbit, with arrows, and then
                show that no possible move changes the positions 
                of the arrows.

Here's a summary of the specs for each type.  Note that the "number
of positions" given is for both only one parity, that is, for both an
even or odd number of quarter turns, and ignoring the all other
orbits.  The number of positions of the whole Cube is *not* a simple
product of all these numbers; the parities of different orbits must
agree.  More on this later.

As usual, I use "!" and "^" for factorial and "raise-to-the-power-of",
i.e. 8!=8*7*6*5*4*3*2*1 and 3^7=3*3*3*3*3*3*3.


 - Types --  ( n = which layer ) ------------------------------------ 
 
  Name        # of     # of orbits per layer.   # of positions per orbit
              cubies   (n odd)        (n even)  (both even/odd parity)
  ------      ------   -----------    -------   ---------------------

n=1

  Central        1      1              0               24

n>1

  Corner         8      1              1             (3^7) 8!
  Edge-Single    12     1              0             (2^11) 12!
  Face-Center    6      1              0             (4^6)

n>3

  Edge-Double    24     (n-3)/2        (n-2)/2         24!
  Face-Corner    24     (n-3)/2        (n-2)/2         24!
  Face-Edge      24     (n-3)/2        0               24!

n>5

  Face-Offset    24     (n-3)(n-5)/4   (n-2)(n-4)/4    24!
  
 ---------------------------------------------------------------------
 
It's also convenient to define "h" and "H" such that

  h = n/2       (n even);       H = N/2         (N even)
  h = (n-1)/2   (n odd);        H = (N-1)/2     (N odd)

which makes the counting a bit easier.  "h" stands for "half", and is
the number of the slice just before the center slice, if there is a
center slice.  With this "h", the expressions for the number of orbits
per layer are much simpler, namely

  Name          # of orbits per layer
  -----------    ----------------
  Double Edge    h-1
  Face-Corner    h-1
  Face-Edge      h-1
  Face-Offset    (h-1)(h-2)


And now for the pictures.  This is much easier to visualize in 3D with
real drawings, but I'll do what I can with ASCII.

The smallest layer n that contains all the distinct types (except
the central cubie, of course) is n=7, so I've drawn in one outside
(n=7) plane of a 7x7x7 Cube below and sketched in where they live.
You can either think of this as the outer-most layer of an N=7 Cube,
or part of an inner n=7 slice of a larger Cube.

The slices (rows and columns in the pictures) can be numbered either
left to right or right to left, so when I refer to the "n-slice" I
also mean the "(N+1-n)-slice" where N=(size of entire Cube)=7 here,
and 1<=n<=N is a particular slice.

I also note to the right of each picture which slice rotations can
disturb the cubies in that orbit, and whether a quarter turn of that
kind of move gives an even or odd permutation of the cubies.  ("even"
or "odd" refers to how many pairwise swaps it takes to get that
permutation.  A cycle of 2 cubies is odd, a cycle of 3 cubies is even,
and a cycle of 4 cubies is odd.  For example, it takes an even number
of moves to corner number 1 to corner 2's place, corner 2 to 3's
place, and corner 3 to 1's place.)  These parities will be discussed
further in the next section.

Where there is more than one possible orbit I have used the labels "p"
and "q" to specify which one is shown.  The letter "H" (described
above) is in this case (with N=7) H = (N-1)/2 = 3.



        7  6  5  4  3  2  1
        1  2  3  4  5  6  7
     -----------------------
    | 
 7 1|   C  .  .  .  .  .  C                     n-Corner
    |
 6 2|   .  .  .  .  .  .  .                     ( N >= n >= H )
    |                           
 5 3|   .  .  .  .  .  .  .             Moved By        Parity
    |                                   -------         ------
 4 4|   .  .  .  .  .  .  .     
    |                                   n-slice         odd
 3 5|   .  .  .  .  .  .  .
    |
 2 6|   .  .  .  .  .  .  .
    |
 1 7|   C  .  .  .  .  .  C


        1  2  3  4  5  6  7
     -----------------------
    |
   1|   .  .  .  ES .  .  .                     n-Edge-Single
    |
   2|   .  .  .  .  .  .  .                     ( N >= n >= H )
    |                           
   3|   .  .  .  .  .  .  .             Moved By        Parity  
    |                                   --------        ------  
   4|   ES .  .  .  .  .  ES     
    |                                   n-slice         odd
   5|   .  .  .  .  .  .  .     
    |                                   (H+1)-slice     odd
   6|   .  .  .  .  .  .  .
    |                                           (Note that H+1 is the slice
   7|   .  .  .  ES .  .  .                      through the center.)



        1  2  3  4  5  6  7
     -----------------------
    |
   1|   .  .  .  .  .  .  .                     n-Face-Center
    |
   2|   .  .  .  .  .  .  .             Moved By             Parity
    |                                   --------             ------
   3|   .  .  .  .  .  .  .             center (H+1)-slice     odd
    |
   4|   .  .  .  FC .  .  .
    |                                   Rotated By
   5|   .  .  .  .  .  .  .             ---------
    |                                   n-slice               "odd"
   6|   .  .  .  .  .  .  .
    |
   7|   .  .  .  .  .  .  .


        1  2  3  4  5  6  7
     -----------------------
    |
   1|   .  ED .  .  .  ED .                     n-p-Edge-Double
    |
   2|   ED .  .  .  .  .  ED              ( 1 < p <= H; p=2 shown here.)
    |                           
   3|   .  .  .  .  .  .  .             Moved By       Parity  
    |                                   --------       ------
   4|   .  .  .  .  .  .  .             n-slice        even (2 4-cycles)
    |                                   p-slice        odd  (1 4-cycle)
   5|   .  .  .  .  .  .  .             
    |                                   (The "p-slice" referred to here
   6|   ED .  .  .  .  .  ED            and in the next figures cuts into the
    |                                   Cube in the 3rd dimension not shown
   7|   .  ED .  .  .  ED .             into the paper.  The "n-slice" move
                                        turns this diagram by 90 degrees.)


        1  2  3  4  5  6  7
     -----------------------
    |
   1|   .  .  .  .  .  .  .                     n-p-Face-Corner
    |
   2|   .  FC .  .  .  FC .              ( 1 < p <= H; p=2 shown here.)
    |                           
   3|   .  .  .  .  .  .  .             Moved By     Parity  
    |                                   --------     ------
   4|   .  .  .  .  .  .  .             n-slice      odd   (4 cubies move)
    |                                   p-slice      even  (8 cubies move)
   5|   .  .  .  .  .  .  .                                
    |                                                      
   6|   .  FC .  .  .  FC .           
    |                               
   7|   .  .  .  .  .  .  . 
 

  
        1  2  3  4  5  6  7
     -----------------------
    |
   1|   .  .  .  .  .  .  .                     n-p-Face-Edge
    |
   2|   .  .  .  FE .  .  .              ( 1 < p <= H; p=2 shown here.)
    |                           
   3|   .  .  .  .  .  .  .             Moved By        Parity  
    |                                   --------        ------
   4|   .  FE .  .  .  FE .             n-slice         odd     (4)
    |                                   p-slice         odd     (4)
   5|   .  .  .  .  .  .  .             (H+1)-slice     even    (8)
    |
   6|   .  .  .  FE .  .  .
    | 
   7|   .  .  .  .  .  .  . 



        1  2  3  4  5  6  7
     -----------------------
    |
   1|   .  .  .  .  .  .  .                     n-p-q-Face-Offset
    |
   2|   .  .  FO .  x  .  .               ( 1 < p <= H; p=2 shown here;
    |                                       1 < q <= H; q=3 shown here; 
   3|   .  x  .  .  .  FO .                   p not equal to q. )
    |                       
   4|   .  .  .  .  .  .  .             Moved By        Parity
    |                                   --------        ------
   5|   .  FO .  .  .  x  .             n-slice         odd
    |                                   p-slice         odd
   6|   .  .  x  .  FO .  .             q-slice         odd
    | 
   7|   .  .  .  .  .  .  .     The x's are *not* part of this orbit,
                                but mark a distinct mirror-image orbit.
                                There are no moves which will bring
                                one of the FO's to one of the x's.


Every cubie on any size NxNxN Cube fits one of these patterns.
For large values of N, nearly all the cubies are in Face-Offset orbits.


======================================================================
(IV) Parity and the Total Number of NxNxN Positions ==================
======================================================================

I'd guess most of you who read this will already understand parity
considerations, but let me run through it quickly anyway.

The basic idea is that any permutation of a group of symbols can be
broken into a sequential set of pair exchanges, and the number of
these pair exchanges, even or odd, determines the parity of the
permutation, even or odd.  Thus if ABCDE is re-arranged into BAECD,
then this rearrangement is odd because it requires three pair swaps,
and three is odd: (1) swap AB to BA in the original, (2) swap D and E
to get the D at the end, (3) swap the E and C.  There are other swap
sequences, but all are odd.

Any slice rotation which cycles four cubies ABCD into BCDA puts those
cubies into an odd permutation since it would require three pair swaps
(AB, AC, AD) to change one into the other.

The point all this is that different orbits must have consistent
parities.  The best known Cube example is that on the 3x3x3 cube, a
quarter turn of any outside slice changes the parity of *both* corners
and edges; therefore, positions which have the corners and edges in
different parities are impossible, and therefore one cannot exchange
two corners without exchanging two edges somewhere, too.

On the NxNxN things are a bit messier.  Any given slice rotation will
change the parity of some orbits, and leave many others unchanged.
Most choices of arbitrary placements of cubies won't be a possible
cube position, not only because of the "twist" of the corners and
"flip" of the edges (described above briefly) but also because the
parity of all the orbits must be consistent.

Here's one way to do it.

Since each slice n>1 moves exactly one Corner orbit, and since the n=1
slice moves the Central cubie, I can use the N Corner/Central orbits
to *define* the parity of each slice.  Then the parity of all other
orbits is fixed, and each has available exactly one-half (only one
parity) of its total number of positions as given in the table

Another way of doing the same thing is to count the only one parity,
that is 1/2 of *all* the orbits, and then multiply by 2^N as the
number of ways to choose the parity on each of N slices.

So I can now calculate the total number of available positions T(N)
of the NxNxN cube by multiplying the number of possible positions of
each orbit, taking into account how many orbits there are in each
layer, over all N layers, and keeping the parity in agreement.  (Note
that here I *am* including a rotation of the entire cube as a new
"position".  To take out this factor, divide what follows by 24.  Note
also that I'm distinguishing between different rotations of the face
centers, which is also a bit different from what is usually done.)

The counting is a pretty straightforward.  Using the initials of the
types as abbreviations, the total number of each type of orbit is:

  N odd:
    #1  = 1
    #C  = (N-1)/2
    #ES = (N-1)/2
    #FC = (N-1)/2
    #ED = Sum n= (3, 5, 7, 9, ..., N) of { (n-3)/2  } = (N-1)(N-3)/8
    #FC =  same as #ED
    #FE =  same as #ED
    #FO = Sum n= (3, 5, 7, 9, ..., N) of { (n-3)(n-5)/4 } 
        = (N-1)(N-3)(N-5)/24

  N even:
    #1  = 0
    #C  = N/2
    #ES = 0
    #FC = 0
    #ED = Sum n= (2, 4, 6, 8, ..., N) of { (n-2)/2  } = (N)(N-2)/8
    #FC = same as #ED
    #FE = 0
    #FO = Sum n= (2, 4, 6, 8, ..., N) of { (n-2)(n-4)/4 } 
        = (N)(N-2)(N-4)/24
        
And so

---------
| T(N) = Total Positions of NxNxN cube, all orientations, 
|        all N^3 cubies
| 
| = 2^N (24/2)^#1 (3^7 8!/2)^#C (2^11 12!/2)^#ES (4^6/2)^#FC 
|     * (24!/2)^(#ED+#FC+#FE+#FO)
-----------------------------

which simplifies to either

 T(N odd)= 24 [3^7 8! 2^10 12! 4^6/2]^((N-1)/2) [24!/2]^( (N-1)(N-3)(N+4)/24 )
    =  24 [ 8.85801e22 ]^((N-1)/2) [3.102242e23]^((N-1)(N-3)(N+4)/24)
    =  (44.9) (0.0561)^N (9.52)^(N^3)
 
or

 T(N even) = [3^7 8!]^(N/2) [24!/2]^( N(N-2)(N+2)/24 )
           = (8.817984e7)^N (3.102242e23)^(N(N-2)(N+2)/24)
           = (1.14)^N (9.52)^(N^3)

which is an awful lot of positions no matter how you look at it.

Note that usually the number of 3x3x3 positions is given without the
factor of 24 (spacial rotations) or the 4^6/2 (face center rotations),
which leaves (3^7 8! 2^10 12!) = 4.3e19.

For large N, T(N) is dominated by the (24!/2)^(N^3/24) term, which is
about 9.524^(N^3), which implies that for very big cubes, each of the
N^3 cubies acts as if it has nearly 10 independent places it can be.

(Oh, and the notation 1.23e4 means 1.23 10^4 = 1230.)


=====================================================================
(V) Solving It  =====================================================
=====================================================================

Here's where the handwaving really gets going.  What I describe here
is closer to an outline of a method than a real algorithm, but you can
probably fill in the details yourself.

The basic idea is to use a general-purpose idea for cycling three
cubies of any given orbit without disturbing any other part of the
Cube.  A small variation on this same theme can be used to twist two
corners or single edges in the place, too.

If I can do this for every type, then all I have to do to solve the
whole cube is the following.

 -- An NxNxN Recipe ------------------------------------------

 (A) If N is odd, orient the Central cubie correctly, and 
     at the same time, turn each Face-Center so that it is aligned
     with the Central cubie.  (If you can't see the orientations 
     of the Face-Centers, as is usually the case on the typical
     3x3x3, then just skip that step and move on.)
 
 (B) For each layer, examine the parity of corresponding
     Corner orbit.  If its parity is odd, make one 
     arbitrary 1/4 turn rotation on that layer; otherwise, 
     don't move it.  At this point all the Corner orbits
     have even parity, and therefore *all* the orbits have
     even parity.

 (C) And finally, I have these nested loops:

   (i) Starting at the innermost layer and working outward, 

    (ii)  on each orbit in that layer, 

       (iii) 1. Restore each cubie of that orbit to its proper position 
             with the 3-cycle technique described below.  Since
             all the orbits already have even parity, these even-move
             combinations are enough to restore everything to their
             proper places.

             2. If the current orbit is a Corner or Edge-Single, 
             then once the cubies are in the right places apply 
             the "twist" and "flip" operations described below
             to orient them correctly.

 That's it.  Now all I have to do is describe three tricks, 
  (1) how to cycle three cubies on any given type,
  (2) how to twist two corners in opposite directions, and
  (3) how to flip two Edge-Singles,
 all without disturbing anything else.

 All these tricks are well known, I think.  And there are certainly
 many, many other tricks; however, these are the simplest that 
 I know of that can be generalized to any size Cube.  Moreover, 
 they have the nice property that you can actually "think" your way
 through them without actually needing to memorize a long sequence
 of moves.  


=====================================================================
(VI) How to Cycle Three Cubies  =====================================
=====================================================================

The basic idea is to find a move sequence that will (1) take a chosen
cubie off from its "hot seat" on a chosen slice *without* (here's 
the trick) disturbing any other cubie on that slice.  The rest
of the cube can be completely scrambled by this operation.  Then (2) 
rotate the chosen slice, (3) undo step (1), putting the original
cubie back into its original slice and undo whatever changes were 
made to the other cubies, and (4) undo step 2.

The sequence always of the form 
   A R A' R'
where "A" is step 1, "R" is a rotation of a single slice, and 
the ' mark means, as usual, the inverse operation.

Here's a detailed example, using the Corner orbit of a 3x3x3 cube,
with the top layer as the "chosen slice" and the cubie marked "1" in
the unfolded sketch of a cube below as the focus of attention. In
eight moves the cubies in locations 1, 2, and 3 will trade places.

The starting position:

             U
    a  -  1  - 2 - d -        (a,1,2,d,e,3,g,h) are a Corner orbit.
    |  L  |  F | R | B
    e  -  3  - g - h -        (U, D, L, R, F, B) are the possible
             D                clockwise rotations.


 (1) Get "b" off the chosen slice, without disturbing any other 
     cubie on that slice.  Replace it with the cubie that you 
     want to put in its place.
            
                 e  -  a  - 2 - d -
 ->   L  ->      |     |    |   |   
                 3  -  1  - g - h -
              
             
                 e  -  a  - 2 - d -
 ->   D  ->      |     |    |   |   
                 h  -  3  - 1 - g -


                 a  -  3  - 2 - d -
 ->   L'  ->     |     |    |   |          After L D L'
                 e  -  h  - 1 - g -

      The top layer was (a,b,c,d); now it is (a,f,c,d).  
      "b" has been taken off the top slice, and "f" is in its place.

 (2) Rotate the chosen slice to place a new cubie in the hot seat.

                 3  -  2  - d - a -
 ->   U  ->      |     |    |   |           After (L D L') U 
                 e  -  h  - 1 - g -
 

 (3) Undo step 1, which pops the chosen cubie "b" back to its
      original slice, *and* (here's the key part), restore (nearly) all 
      other cubies to their original locations, since none of the 
      disturbed ones were on the slice that rotated in step (2).

                    3  -  1  - d - a -
 -> L D' L' ->      |     |    |   |           After (L D L') U (L D' L')
                    e  -  2  - g - h -

 
 (4) Undo step 2, restoring the chosen slice back to its original position.

                    a  -  3  - 1 - d -
   ->  U'  ->       |     |    |   |       After (L D L') U (L D' L') U'
                    e  -  2  - g - h -

So the move sequence to cycle corners (1,2,3) is simply 
(L D L') U (L D' L') U'   (reading left to right).

With a few extra moves before this sequence (which should be undone
afterwards) to arrange the cubies which should be moved into the 
places which are actually modified by this operation (or a similar
one), this trick and its variations can be used to put back all 8
corners into their proper places.

And with a bit of exploration, this same idea can be used to cycle
three cubies of any type, in any orbit, on any layer, without
disturbing anything else.  For the Edge-Singles on the 3x3x3, for
example, to bring an edge off the top slice without disturbing
anything else on top, step (1) can be S D S', where "S" vertical is a
rotation of a center slice.  Or it could be F H F', where "H" is a
horizontal rotation of of center slice parallel to the top and bottom;
either works.

I have actually tried this for all eight of the types of orbits, and
it does indeed work.  Yes, I know this is pure handwaving, but this
essay is already long enough, and it really is pretty straightforward
once you get the idea.


=====================================================================
(VII) Turning Corners and Flipping Edges  ===========================
=====================================================================

I don't think I need to say too much about this, because
basically the same tricks that work on the 3x3x3 Cube will
work on the orbits in the NxNxN.  

My usual approach is to find a sequence that will bring 
a corner or single-edge cubie out of its position, and
then back with a turn or flip, *without* changing any cubie on on
slice.  Call that entire operation "A".  Then just like 
before, A R A' R' where "R" is a rotation of the slice which 
was left (nearly) unchanged will restore all the parts of the 
Cube which were messed up by A, and leave only two corners or
two edges turned or flipped.

For example, on the 3x3x3, this sequence will turn two corners.
  [(L DD L') (F' DD F)] U [(F DD F') (L' DD L)] U'
The stuff in the brackets brings a corner cubie off the top (up)
slice, and brings it back with a twist.

If "H" is a clockwise (as viewed from the top) quarter turn 
on the horizontal center slice of the 3x3x3 (the plane parallel
to the top and bottom), then this similar sequence will flip two edges.
  [ (L HH L') U' (F' HH F) U ] U [ U' (F HH F') U (L' HH L) ] U'
Again, the moves in the brackets bring one of the 3x3x3 edge
cubies off the top layer, and bring it back with a twist.

One can also combine several different 3-cycles from section VI
to twist and flip the corners and edges.


=====================================================================
(VII) Comments    ===================================================
=====================================================================

Well, that turned out to be a lot longer than I'd planned.  If anyone
has actually bothered to read down this far, I hope it was worthwile.

I think that when all is said in done, the 3x3x3 is by far the most
interesting of the sizes.  All the new types of orbits on the larger
Cubes are fairly boring, actually, since none of the cubies can be
flipped or turned in place the way that the 3x3x3 corners and edges
can.  And I confess that I like how the only cubie on the 3x3x3 that
you can't see - the one that I like to imagine is hidden in the center
- is the only one that's completely specified by the locations of the
other orbits, namely by the positions of the face centers.

When I was first working out this stuff, back in 1981, I built a 7x7x7
Cube out of colored dice.  None of them were "stuck" to the others; it
was just stack of dice.  Manipulating it was pure hell, but I could
usually squeeze a layer and carefully turn and put it back.  One slip
and I had dice all over the room.  


I have a few other ideas kicking around in the back of my head,
but they'll have to wait for another time, and another note.


Regards,

  Dr. Jim Mahoney                          mahoney@marlboro.edu
  Physics & Astronomy			   <http://www.marlboro.edu/~mahoney>
  Marlboro College, Marlboro, VT  05344



From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 02:48:31 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id CAA05776 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 02:48:30 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 1996 09:33:41 +0300 (IDT)
From: Rubin Shai <s2394459@cs.technion.ac.il>
X-Sender: s2394459@csc
To: Cube-Lovers@ai.mit.edu
Subject: Computer representation to the cube.
Message-Id: <Pine.SV4.3.91-heb-2.04.960605092401.2432A-100000@cs.technion.ac.il>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

Hi all
I'm looking for an easy to implementation / easy to debug / easy to print 
/ and most important chip to manipulate (in computer time) for the 3X3X3 
cube. Does anyone heard of somthing?
Shai



From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 15:28:47 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id PAA07399 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 15:28:46 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 05 Jun 1996 10:22:31 -0500 (EST)
From: Jerry Bryan <jbryan@pstcc.cc.tn.us>
Subject: Re: A essay on the NxNxN Cube : counting positions and solving it
In-Reply-To: <199606042208.SAA13307@marlboro.edu>
To: Cube-Lovers <cube-lovers@ai.mit.edu>
Message-Id: <Pine.PMDF.3.91.960605084501.9735A-100000@PSTCC6.PSTCC.CC.TN.US>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Content-Transfer-Encoding: 7BIT


On Tue, 4 Jun 1996, Jim Mahoney wrote:

It's going to take a while to absorb your whole note, but I do have a
couple of quick comments/questions. 

> Next, I will define any complete set of cubies that can move into each
> other's position as an "orbit."  (This name is at least suggestive of
> the group theory notion of a closed sequence of elements.)  For
> example, the 8 corner cubies on the 3x3x3 Cube form one orbit since
> any one of those cubies can be put in any of those eight positions.
> Likewise, the 12 edge cubies on the 3x3x3 form another orbit.

This has been discussed before on Cube-Lovers, but I am still puzzled or
curious about the usage of the word "orbit".  Your definition is
consistent with the usage advocated by Martin Schoenert on Cube-Lovers. 
For example, Martin talked about the corner orbit, the edge orbit, and the
face center orbit of the 3x3x3.  (I suppose for completeness, we should
include in this list of orbits the orbit for the invisible center of the
whole 3x3x3 cube.)

David Singmaster, on the other hand, has always talked about the twelve
orbits of the constructable group of the 3x3x3, where orbits are defined
in terms of twists, flips, and parity.  Depending on what you mean by
"closed sequence of elements", your definition may be consistent with
Singmaster's usage as well.  That is, Singmaster's orbits are certainly
closed.  However, Martin says that Singmaster's orbits should be called
cosets. 

Secondly, if my understanding of your model is correct, you are treating
positions as distinct which cannot be distinguished with normal coloring
of a physical cube (even an imaginary physical cube for large N).  The
issue appears as early as the 4x4x4, and persists for larger values of N. 
I don't necessarily disagree with your treatment.  Indeed, it makes the
cube theory tenable.  Otherwise, your model tends to become a coset model
rather than a group model.  But I wondered if my understanding of your
model is correct? 

There are several implications of how you treat visibly indistinguishable
positions.  For example, it impacts your counts of how many positions
there are.  For another example, it impacts your solutions (e.g.,
"invisible" incorrect parity on the 4x4x4.  "Invisible" bad parity can
also occur on the 3x3x3 if you remove the face center color tabs.  A slice
move will give the edges and corners opposite parity that is not visible.)
Perhaps you could discuss these issues with respect to your model. 

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
Robert G. Bryan (Jerry Bryan)                jbryan@pstcc.cc.tn.us
Pellissippi State                            (423) 539-7127
10915 Hardin Valley Road                     (423) 694-6435 (fax)
P.O. Box 22990
Knoxville, TN 37933-0990




From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 15:27:15 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id PAA07391 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 15:27:14 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 1996 09:30:21 +0100
Message-Id: <96060509302127@glam.ac.uk>
From: VANESSA PARADIS WANTS ME <cmaggs@glam.ac.uk>
To: CUBE-LOVERS@ai.mit.edu
X-Vms-To: RUBIKCUBE

To have a bit more challange when doing the cube, complete it so that each 
horizontal slice, is 1 turn (quarter of a full circle) out of place.
Therefore, top and bottom face are one colour, but all side faces contain 3
colours.
Boy, is it hard!

By the way, I can do the cube in 1 minute 26 seconds.
How does that compare with everyone else!
(P.S. Please be fair, I`ve only been doing it for 6 weeks or so!)

Chris

CMAGGS@GLAM.AC.UK


From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 15:27:57 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id PAA07395 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 15:27:56 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 1996 09:53:36 -0400
Message-Id: <199606051353.JAA21055@chara.BBN.COM>
From: Allan Wechsler <awechsle@bbn.com>
To: s2394459@cs.technion.ac.il
Cc: Cube-Lovers@ai.mit.edu
In-Reply-To: 
	<Pine.SV4.3.91-heb-2.04.960605092401.2432A-100000@cs.technion.ac.il>
	(message from Rubin Shai on Wed, 5 Jun 1996 09:33:41 +0300 (IDT))
Subject: Re: Computer representation to the cube.
Reply-To: awechsle@bbn.com

   Date: Wed, 5 Jun 1996 09:33:41 +0300 (IDT)
   From: Rubin Shai <s2394459@cs.technion.ac.il>

   Hi all
   I'm looking for an easy to implementation / easy to debug / easy to print 
   / and most important chip to manipulate (in computer time) for the 3X3X3 
   cube. Does anyone heard of somthing?
   Shai

Ani lo y'khol lavin et-ha-anglit shelkha.  Are you looking for a
program?  An algorithm?  A piece of hardware?  A circuit diagram?  And
I apologize in advance if I got your gender wrong in my wretched
Hebrew.

-A



From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 19:50:32 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id TAA07826 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 19:50:31 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <v02130508addbb30e7cf0@[205.230.130.72]>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Wed, 5 Jun 1996 18:02:49 -0500
To: CUBE-LOVERS@ai.mit.edu
From: Kristin Looney <kristin@tsi-telsys.com>
Subject: fastest hands in the midwest...

> By the way, I can do the cube in 1 minute 26 seconds.
> How does that compare with everyone else!

37.72 won me the midwest championship, my best official time was
35.30 seconds which placed me 5th in the country. I think it was 1981.
Now?  I don't get timed very often, but it's still usually under a minute.

I guess it is like riding a bicycle.

Anyone else on this list from those contest days?  Minh Thai - are you
out there?  How about Jeff Verasono? or David P. Conrady?  I've often
wondered what that crazy guy with the bright maroon hair ended up
doing with his life...

Kristin (used to be Wunderlich) Looney
kristin@tsi-telsys.com




From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 19:50:57 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id TAA07832 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 19:50:56 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 96 18:32:29 EDT
From: hoey@aic.nrl.navy.mil
Message-Id: <9606052232.AA22039@sun34.aic.nrl.navy.mil>
To: Nicholas Bodley <nbodley@sunspot.tiac.net>,
        Wei-Hwa Huang <whuang@cco.caltech.edu>
Cc: Cube-Lovers@ai.mit.edu
Subject: Fragile parts in 4^3

On 1 Jun 1996, Wei-Hwa Huang wrote:

{Mostly snipped}

> As another aside, I don't understand the rationale behind the canonical
> 4x4x4 design.  It would seem to me that it's better to have two rings of
> grooves in each dimension, so that the face pieces could have "fatter"
> legs and not break off as easily.

If the center pieces had one leg each (instead of a 1/4-leg) you would
have _one_ groove around each equator (instead of _half_ a groove).
Remember, it's important that the inner sphere stay in sync with at
least one of the sets of face centers so that after you've finished
the turn you will be able to turn in an orthogonal direction.  I don't
know how that would work with the turns of the face.  You might need
a switch that looks kind of like the following where two equators meet:

            I
            I     * * *
            I *           *
============O===============O========
          * I                 *
            I
        *   I                   *
        *   I                   *
        *   I                   *
            I
          * I                 *
            O               O
            I *           *
            I     * * *
            I

where the legs live at the "O" positions when a turn is not in
progress.  But this looks dangerous to me; I think there is a lot of
potential for derailment.

Dan Hoey
Hoey@AIC.NRL.Navy.Mil


From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 19:51:48 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id TAA07836 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 19:51:47 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 96 18:54:44 EDT
From: hoey@aic.nrl.navy.mil
Message-Id: <9606052254.AA22046@sun34.aic.nrl.navy.mil>
To: Jim Mahoney <mahoney@marlboro.edu>
Cc: Cube-Lovers <cube-lovers@ai.mit.edu>
Subject: Re: A essay on the NxNxN Cube : counting positions and solving it

> All the
> real mechanical 3x3x3, 4x4x4, 5x5x5 Cubes that I've seen only have
> cubies on the outside, but if you can put back all N^3 cubies in the
> one I'm describing then you can certainly do the real ones.  

> (In Dan Hoey's notation, I believe that this means I treat the Cube as
> the G+C group, where G is generated by the outer slice rotations, and
> C is the rotations of the entire thing....

Actually, the distinction between G and G+C is that in the latter we
draw a distinction between cubes that differ by a whole-cube move as
different.

When we take account of the internal cubies I call it the "Theoretical
Invisible cube", described in my Invisible Revenge article 9 August
1982.  A solution method is given in 

	Eidswick, J. A., "Cubelike Puzzles -- What Are They
	and How Do You Solve Them?", 'American Mathematical
	Monthly', Vol. 93, #3, March 1986, pp. 157-176.

that is pretty much like yours, I think.

As for counting the positions, I haven't got around to checking the
numbers in "Groups of the larger cubes", 24 Jun 1987.  You might want
to see how they compare to yours.

Dan Hoey
Hoey@AIC.NRL.Navy.Mil


From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 19:52:19 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id TAA07842 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 19:52:17 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 96 19:27:12 EDT
From: hoey@aic.nrl.navy.mil
Message-Id: <9606052327.AA22049@sun34.aic.nrl.navy.mil>
To: Jerry Bryan <jbryan@pstcc.cc.tn.us>
Cc: Cube-Lovers <cube-lovers@ai.mit.edu>
Subject: Re: A essay on the NxNxN Cube : counting positions and solving it

Jerry remarks:

> For example, Martin talked about the corner orbit, the edge orbit, and the
> face center orbit of the 3x3x3....

> David Singmaster, on the other hand, has always talked about the twelve
> orbits of the constructable group of the 3x3x3, where orbits are defined
> in terms of twists, flips, and parity....

When a group G has a representation as permutations of a set X, the
orbits are the equivalence classes of X induced by x~y if a (x)g=y for
some g in G.  But these orbits will be different depending on the
representation, and in particular depending on X.

If we represent the Rubik group as the usual permutations on cubies
and facies, the orbits are corners, edges, etc. as Martin uses.  I
agree this is the usual kind of orbit to talk about.

If we represent the Rubik group as permutations on itself (I think
it's called the right regular representation) you get one orbit.  This
is always true of the right regular representation, since for any f, g
in G, let h=f'g, and we have (f)h = g, so f~g.

But consider the constructible group C, the set of positions you can
get by taking the cube apart and putting it back together.  We can
extend the right regular representation to a representation on C.  In
this case, there are twelve orbits of mutually accessible positions.
This is Singmaster's usage.  They are indeed the cosets of C/G, as
with any subgroup of a larger group.

But the fact that we usually do not consider the group structure of C
(as in taking products of reassemblies) militates against calling them
cosets, so I can understand why Singmaster might prefer orbits.  But
we have to remember to disambiguate which kind of orbit we are talking
about.

Dan Hoey
Hoey@AIC.NRL.Navy.Mil


From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 22:17:39 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id WAA08111 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 22:17:38 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 1996 16:47:13 -0400
Message-Id: <199606052047.QAA21223@chara.BBN.COM>
From: Allan Wechsler <awechsle@bbn.com>
To: cmaggs@glam.ac.uk
Cc: CUBE-LOVERS@ai.mit.edu
In-Reply-To: <96060509302127@glam.ac.uk> (message from VANESSA PARADIS WANTS
	ME on Wed, 5 Jun 1996 09:30:21 +0100)
Reply-To: awechsle@bbn.com

   Date: Wed, 5 Jun 1996 09:30:21 +0100
   From: VANESSA PARADIS WANTS ME <cmaggs@glam.ac.uk>

   To have a bit more challange when doing the cube, complete it so that each 
   horizontal slice, is 1 turn (quarter of a full circle) out of place.
   Therefore, top and bottom face are one colour, but all side faces contain 3
   colours.

I'm not sure I understand this modified goal.  Isn't this achieved by
solving the cube aas usual, and then giving the top and bottom faces a
clockwise quarter twist?  Then the top and bottom are solid, and the
sides are tricolor horizantal stripes.

Even if I haven't understood the goal position, solving for any
achievable position is not in principle harder than solving for any
other.  There might be perceptual problems, but surely these would go
away after a little practice, no matter what the goal configuration.

-A



From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 22:18:25 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id WAA08115 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 22:18:24 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <199606060031.UAA16994@orbit.flnet.com>
From: Chris and Kori Pelley <ck1@flnet.com>
To: CUBE-LOVERS@ai.mit.edu
Subject: RE: Contest days
Date: Wed, 5 Jun 1996 20:31:12 -0400
X-Msmail-Priority: Normal
X-Priority: 3
X-Mailer: Microsoft Internet Mail 4.70.1080
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

>Anyone else on this list from those contest days?  Minh Thai - are you
>out there?  How about Jeff Verasono? or David P. Conrady?  I've often
>wondered what that crazy guy with the bright maroon hair ended up
>doing with his life...

I was in the contests.  First place in Peoria, IL with 48 seconds or so.
Then I won 5th place in Chicago with 47ish seconds, 3rd in St. Louis
with 46 seconds.  I was only 13 at the time and it was just a thrill to
be there with so many other avid cube-solvers.  I still have my official
Ideal "Cubists Do It Faster" T-shirts.  From the St. Louis contest,
which was held in a large outdoor mall, I managed to come away with
one of the stage props which was a giant cardboard cube about 3 feet
per side.  I used it as a table for a few years, then it finally
collapsed.


Chris Pelley
ck1@flnet.com



From cube-lovers-errors@curry.epilogue.com  Wed Jun  5 22:19:02 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id WAA08119 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 5 Jun 1996 22:19:01 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
To: Cube-Lovers@AI.MIT.EDU
From: Wei-Hwa Huang <whuang@cco.caltech.edu>
Subject: Re: fastest hands in the midwest...
Date: 6 Jun 1996 02:06:31 GMT
Organization: California Institute of Technology, Pasadena
Lines: 14
Message-Id: <4p5ef7$cvj@gap.cco.caltech.edu>
References: <cube-lovers.v02130508addbb30e7cf0@[205.230.130.72]>
Nntp-Posting-Host: accord.cco.caltech.edu
X-Newsreader: NN version 6.5.0 #12 (NOV)

Kristin Looney <kristin@tsi-telsys.com> writes:

>Anyone else on this list from those contest days?  Minh Thai - are you
>out there?  How about Jeff Verasono? or David P. Conrady?  I've often
>wondered what that crazy guy with the bright maroon hair ended up
>doing with his life...

I talked with Minh Thai some time last year.  He's currently working with
a firm in Eagle Rock, CA.

-- 
Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
---------------------------------------------------------------------------
Caught Porfiry, Raskolnikov sung his swan Sonia when he went Dounia to Siberia.


From cube-lovers-errors@curry.epilogue.com  Thu Jun  6 23:32:59 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA11086 for <cube-lovers-outbound@curry.epilogue.com>; Thu, 6 Jun 1996 23:32:58 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Thu, 6 Jun 1996 11:54:46 +0100
Message-Id: <9606061054.AA14444@mecmdb.me.ic.ac.uk>
X-Sender: ars2@mecmdb.me.ic.ac.uk
X-Mailer: Windows Eudora Light Version 1.5.2
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: Cube-Lovers@ai.mit.edu
From: "The Official Mech. Eng. Exams Failure Club." <a.southern@ic.ac.uk>
Subject: Re: Fragile parts in 4^3, and limits to a n^3

At 08:35 04/06/96 -0400, you wrote:
>On 1 Jun 1996, Wei-Hwa Huang wrote:
>
>{Mostly snipped}
>
>> As another aside, I don't understand the rationale behind the canonical
>> 4x4x4 design.  It would seem to me that it's better to have two rings of
>> grooves in each dimension, so that the face pieces could have "fatter"
>> legs and not break off as easily.
>> 
>> Wei-Hwa Huang, whuang@cco.caltech.edu, http://www.ugcs.caltech.edu/~whuang/
>
>  It probably isn't necessary for the legs to be so thin; the mechanical 
>engineer probably had optimistic estimates of the likely forces and the 
>strength of the particular polymer used. The latter isn't, by any means, 
>cheap stuff.

It is compared to those injection Moulds that they had made. These will be
the most expensive parts for each puzzle. The more variety of parts, the
more expensive the puzzle.

I reckon that on a 3^3 there must be at least 6 different classes of parts
(the centre pieces on each face have a main part and a cover). I reckon that
the Megaminx has 5 as well. I have not taken apart a 5^3 yet, but there must
be about 8 or 9 if it works on similar lines to the 3^3. This almost doubles
the overheads of the 5^3 production compared to 3^3 production.

This Brings me to two questions (well three really, but the third is
unrelated) :

1) Who has the Injection Moulds for the 4x4x4, and are they still in
functioning order?
2) How many 7^3 (okay, I know there is currently no design) could possibly
be sold, and do you think that this would cover the costs of injection
moulds (optimistically about 15 or so)  and construction (even allowing for
the Retailer to take ~70% of the price)?

my third and final(?) question is:

3)With all this talk of Who is on our group, is there any reason why the
mailing list can't be published? And if not, are there any of the designers
of Rubik's Range or Similiar? Any Company Executives looking for new Ideas?

Tar, Now I've got to go, I've got an exam to fail..................

Andy.



From cube-lovers-errors@curry.epilogue.com  Thu Jun  6 23:33:56 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA11090 for <cube-lovers-outbound@curry.epilogue.com>; Thu, 6 Jun 1996 23:33:55 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Thu, 06 Jun 1996 12:23:05 -0500 (EST)
From: Jerry Bryan <jbryan@pstcc.cc.tn.us>
Subject: Re: Compact Cube Representation for Shamir and Otherwise
In-Reply-To: <9606020417.AA04623@sun13.aic.nrl.navy.mil>
To: Cube-Lovers <cube-lovers@ai.mit.edu>
Message-Id: <Pine.PMDF.3.91.960605165955.9735B-100000@PSTCC6.PSTCC.CC.TN.US>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Content-Transfer-Encoding: 7BIT


On Sun, 2 Jun 1996 hoey@aic.nrl.navy.mil wrote:

> Jerry writes of the standard S24 x S24 model, which uses 48 bytes per
> position without packing.  He also has a "supplement" representation
> that uses one facelet from each edge and corner, for 20 bytes.  He
> packs them into 13 bytes on tape.
> 
> The way I did it the last time I worked on brute force was to
> pack eight twelve-bit fields:

The way I count it, Dan's result is twelve bytes of eight bit bytes.  So
Dan has bested me by one byte (but see below). 

> 
>      The orientations in two twelve-bit fields (2^11 and 3^7),

It looks like you are only storing the orientation of eleven of the 
twelve edge cubies.  The orientation of the twelfth can be inferred from 
the orientation of the first eleven.  On the other hand, you could store 
all twelve and still fit in twelve bits.  It also looks like you are only 
storing the orientation of seven of the eight corner cubies.  Again, the 
orientation of the eighth can be inferred from the orientation of the 
first seven.  This time it matters.  That is, 3^7 will fit in twelve 
bits, but 3^8 will not, if I am counting it right. 

> Also, postmultiplying by a fixed permutation can be done with table
> lookup without unpacking.  I used this feature for twelve permutations
> of particular interest.
> 
> I am somewhat rusty on the implications of using this representation
> in conjunction with Shamir's algorithm.  I think it provides an
> ordering of the permutations that enables at least an approximation to
> the random access you need, then you unpack it and do a better job.

I think that unpacking would be required to build and traverse the "Shamir
tree", but the unpacking that would be required should be relatively easy. 

I have always been reluctant to form compositions of packed formats
because it seemed both messy and slow to have to unpack both permutations
which are being composed and then to repack the result.  In principle,
what you have to do is about the same as what you have to do in building
and traversing the "Shamir tree" with packed formats.  But in practice it
seems a lot messier to unpack two permutations and to repack their 
composition than to simply unpack one permutation as you traverse a tree. 

Dan seems to have solved the problem for certain specific cases (and for 
post-multiplying only) via table lookup.  It is not clear to me that 
table lookup could be used for the more general case of multiplying any 
permutation by any other permutation.

I have always known that the supplements of the corners and edges could be
reduced by one byte each unpacked, down to seven bytes for the corners and
down to eleven bytes for the edges.  The missing bytes could always be
reconstructed, but I didn't want to bother.  Now, it occurs to me that
working with the supplements alone and never expanding them back to S24 x
S24, there is really no reason ever to reconstruct the missing bytes. 
Hence, we can have an eighteen byte representation unpacked.  The eighteen
byte representation easily packs down to twelve bytes (same as Dan's). 

We could surely do better if we tried.  Log2(|G|) is about 65.22, so we
should be able to represent each position in 66 bits, or in 9 bytes.  But
I don't think the packing required would be worth the trouble. 

66 bits is the theoretical minimum to represent |G| positions if the
positions are independent.  But the positions are not really independent
(e.g., M-conjugacy).  I'm not sure exactly what the best we can do
actually is. 

My Shamir program is going to represent each position as a pair of indices
(i1,i2).  i2 will be a single byte containing 1..48 and indexing M.  i1
will be two or three bytes indexing a table of representatives of
M-conjugacy classes.  The table in turn will consist of eighteen byte
supplements of permutations less the last edge and the last corner cubie. 
A two-byte index will cover quarter turns through level 6 of the tree
(there are 18,395 representatives at level 6).  A three-byte index will
cover quarter turns through level 9 of the tree (there are 14,956,266
representatives at level 9).  I am dubious that I will even get into the
three byte index business.  It will simply take too long.  That is, a two
byte index through level 6 will allow level's 7 through 12 to be
calculated.  It may well take too long to go any further than that. 

Anyway, (i1,i2) means m'[i2]X[i1]m[i2].  The indices (i1,i2) will be
sorted according to the lexicographic order of m'[i2]X[i1]m[i2].  The
"Shamir tree" will be built with the indices as the leaf nodes.  The
effective storage required for each position will be maybe five bytes or
so because you have to count the table of representatives in any honest
accounting of memory requirements.  Thus, the tree structure itself will
be the biggest consumer of memory. 

This approach will not require any packing or unpacking, but it will
require lots of extra multiplying of permutations.  However, at most
points in the processing, it will not be necessary to multiply the entire
permutation.  Multiplying a single cell of the vector will usually suffice
for comparing vectors, traversing the tree, etc. 

 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
Robert G. Bryan (Jerry Bryan)                jbryan@pstcc.cc.tn.us
Pellissippi State                            (423) 539-7127
10915 Hardin Valley Road                     (423) 694-6435 (fax)
P.O. Box 22990
Knoxville, TN 37933-0990









From cube-lovers-errors@curry.epilogue.com  Thu Jun  6 23:32:00 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA11082 for <cube-lovers-outbound@curry.epilogue.com>; Thu, 6 Jun 1996 23:32:00 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 1996 23:07:24 -0400
From: Jim Mahoney <mahoney@marlboro.edu>
Message-Id: <199606060307.XAA14353@ marlboro.edu>
To: Jerry Bryan <jbryan@pstcc.cc.tn.us>
Cc: cube-lovers@ai.mit.edu
In-Reply-To: <Pine.PMDF.3.91.960605084501.9735A-100000@PSTCC6.PSTCC.CC.TN.US> (message from Jerry Bryan on Wed, 05 Jun 1996 10:22:31 -0500 (EST))
Subject: Re: A essay on the NxNxN Cube : counting positions and solving it


>>>>> "Jerry" == Jerry Bryan <jbryan@pstcc.cc.tn.us> writes:
    Jerry>  This has been discussed before on Cube-Lovers, but I am
    Jerry> still puzzled or curious about the usage of the word
    Jerry> "orbit".

So am I, actually.  Dan Hoey just replied with a much more detailed
understanding of the group theory aspects of this word than I have at
present, which I'll have to think about some more.  For myself, I mean
no more and no less than a set of cubies which can move into each
other's positions.  For a 3x3x3 cube which I imagine to be made of of
3^3=27 smaller cubes (cubies), what I call "orbits" are exactly those
cubies at the 8 corners, 12 edges, 6 faces, and 1 (unseen) at the
center.

    Jerry> Secondly, if my understanding of your model is correct, you
    Jerry> are treating positions as distinct which cannot be
    Jerry> distinguished with normal coloring of a physical cube (even
    Jerry> an imaginary physical cube for large N).

Yes, exactly.  As Dan just said, he has discussed this vision of the
cube in earlier notes, and called it the "theoretical invisible cube".

When I started thinking about these larger cubes, I built them by
making piles of dice.  All the inner cubies were there, and all had
definite orientations, and I could see them every time I tried to
rotate a slice - which required carefully seperating out the layers,
turning one, and putting everything back together.  So perhaps that's
why I liked those "invisible" inside pieces.  But it also seemed more
elegant.  The restricted versions (only the outside, only the
orientations of the corners and edges, etc.) are all special cases.

    Jerry> There are several implications of how you treat visibly
    Jerry> indistinguishable positions.  For example, it impacts your
    Jerry> counts of how many positions there are.  For another
    Jerry> example, it impacts your solutions (e.g., "invisible"
    Jerry> incorrect parity on the 4x4x4.  "Invisible" bad parity can
    Jerry> also occur on the 3x3x3 if you remove the face center color
    Jerry> tabs.  A slice move will give the edges and corners
    Jerry> opposite parity that is not visible.)  Perhaps you could
    Jerry> discuss these issues with respect to your model.

I'm not sure what there is to say; you seem to understand the issues.

Yes, I am counting "visibly indistinguishable" positions as different,
especially on the larger cubes, if by "visibly" you mean to only look
at the outside.  I'm assuming that either the whole thing is
transparent, or that you can take it apart, and see the inside cubies
if you like.  There are parity constraints between the different
orbits, including the ones on the inside that are "invisible," but
they turn out to be fairly simple: the parity of each orbit of corners
and the central cubie, from the outer layer all the way down to the
inside, are independent, and can be chosen arbitrarily.  And once
they're fixed, the parity of all the other orbits is given.  

By "bad" parity I assume you mean a case when the edges and corners
have different parities.  Starting from the solved (even parity) 3x3x3
Cube, a slice move definitely does this; four outside edges cycle, and
the corners don't move.  However, on the 3x3x3, this *is* visible,
since the face centers will also have odd parity.  Moreover, the
central cube (which you can't see, of course, and isn't really there
on a real cube) also has odd parity, in a way: it has undergone an odd
number of quarter turns.  On a 4x4x4, a slice move on a solved cube
changes the parity of the inside 2x2x2 corners (which you can't see)
and the edges (which you can).  The parity of the outer corners is
left unchanged, since they didn't move, and the parity of the face
centers is also unchanged, since 8 of them move in two cycles of four
cubies.  Then the fact that the outside edges are odd while the
outside corners are even simply means that the inside 2x2x2 corners
are also odd.  That's all.


Hope that helps,

  Dr. Jim Mahoney                          mahoney@marlboro.edu
  Physics & Astronomy
  Marlboro College, Marlboro, VT  05344




From cube-lovers-errors@curry.epilogue.com  Thu Jun  6 23:31:12 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA11078 for <cube-lovers-outbound@curry.epilogue.com>; Thu, 6 Jun 1996 23:31:10 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 5 Jun 1996 22:22:26 -0400
From: Jim Mahoney <mahoney@marlboro.edu>
Message-Id: <199606060222.WAA13586@ marlboro.edu>
To: hoey@aic.nrl.navy.mil
Cc: cube-lovers@ai.mit.edu
In-Reply-To: <9606052254.AA22046@sun34.aic.nrl.navy.mil> (hoey@AIC.NRL.Navy.Mil)
Subject: Re: A essay on the NxNxN Cube : counting positions and solving it


>>>>> "hoey" == hoey  <hoey@AIC.NRL.Navy.Mil> writes:
    hoey> When we take account of the internal cubies I call it the
    hoey> "Theoretical Invisible cube", described in my Invisible
    hoey> Revenge article 9 August 1982.  A solution method is given
    hoey> in
    hoey> 	Eidswick, J. A., "Cubelike Puzzles -- What Are They
    hoey>       and How Do You Solve Them?", 'American Mathematical
    hoey>       Monthly', Vol. 93, #3, March 1986, pp. 157-176.

Thanks for the references.  I haven't seen Eidswick's paper yet,
but will check it out.

    hoey> As for counting the positions, I haven't got around to
    hoey> checking the numbers in "Groups of the larger cubes", 24 Jun
    hoey> 1987.  You might want to see how they compare to yours.

I just did, and for the specific case that I describe (which is "s:
Supergroup, i: theoretical invisible group") the formulas are exactly
the same.  I didn't consider nearly the range of alternatives discussed
in that article, but its nevertheless nice to see a confirmation of
the results.

Regards,

  Dr. Jim Mahoney                          mahoney@marlboro.edu
  Physics & Astronomy
  Marlboro College, Marlboro, VT  05344







From cube-lovers-errors@curry.epilogue.com  Fri Jun  7 14:55:40 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA12843 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 7 Jun 1996 14:55:40 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Thu, 6 Jun 1996 09:04:04 -0400
From: Rob Hochberg <hochberg@dimacs.rutgers.edu>
Message-Id: <199606061304.JAA20500@dimacs.rutgers.edu>
To: CUBE-LOVERS@ai.mit.edu
Subject: Speed cubing


I've heard about some pretty fast people who've claimed to 
have averages in the low 20's, but I haven't seen them perform.

My buddy from high school, Scott Evans, now living in Austin,
averages about 25 seconds these days.  He's the fastest active
cubist I've seen in the last 10 years.  I'm at about 28 seconds.

Anyone else?

Rob hochberg@dimacs.rutgers.edu



From cube-lovers-errors@curry.epilogue.com  Fri Jun  7 14:55:11 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA12839 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 7 Jun 1996 14:55:10 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <v01530502addc0f86e121@[205.214.160.67]>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Wed, 5 Jun 1996 21:43:50 -0700
To: CUBE-LOVERS@ai.mit.edu
From: Lars Petrus <lars@netgate.net>
Subject: Re: fastest hands in the midwest...

>> By the way, I can do the cube in 1 minute 26 seconds.
>> How does that compare with everyone else!

I've teached a lot of people the cube, and after 6 weeks, that is a
really good time. I think it's much better than I did after that time.

To get *really* good times, you need a really good method, averaging
50-60 moves.

>37.72 won me the midwest championship, my best official time was
>35.30 seconds which placed me 5th in the country. I think it was 1981.
>Now?  I don't get timed very often, but it's still usually under a minute.
>
>I guess it is like riding a bicycle.
>
>Anyone else on this list from those contest days?  Minh Thai - are you
>out there?  How about Jeff Verasono? or David P. Conrady?  I've often
>wondered what that crazy guy with the bright maroon hair ended up
>doing with his life...
>
>Kristin (used to be Wunderlich) Looney
>kristin@tsi-telsys.com

I won the swedish championship with 40.48 (*very* hard cubes), and ended
4th in the world championships with 24.57. My personal best is 15.92, and
best average of 10 consecutive solutions about 23.50. Nowadays I'm 2-4
seconds slower, but (fortunately!) I don't do it nearly as much.

Yes, its a lot like riding a bike. Sometimes I haven't done it for years,
get a new cube, and it's just like before. Weird...

  -  -  -  -
For every economist, there exists an equal and opposite economist.

Lars Petrus, Sunnyvale, California  -  lars@netgate.net




From cube-lovers-errors@curry.epilogue.com  Fri Jun  7 14:57:37 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA12857 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 7 Jun 1996 14:57:34 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
From: Mark Longridge <cubeman@dis.on.ca>
X-Mailer: SCO OpenServer Mail Release 5.0
To: cube-lovers@ai.mit.edu
Subject: Cube Contests
Date: Thu, 6 Jun 96 13:14:17 EDT
Message-Id:  <9606061314.aa26502@admin.dis.on.ca>

Well, I never did manage to contact Minh Thai and Jeff Varasano.

 

I was the sole prize-winning Canadian in the US contests (the 2nd one).

Unfortunately, that was not really allowed by the rules so the feat

was never recorded in the Ideal newsletters, though I still have my

medal from Sept. 28, 1981 from Buffalo New York.

 

My time was around 38 seconds... although I did improve after that a bit.

 

There are other people from the cube contests that are on the internet:

 

Myself, Chris Pelley, Robert Jen....

 

I was never sure if Mike Reid of Cube-Lovers was the same Mike Reid in the

cube contests...

 

I was in the Canadian contests too, although no prizes there. I did get

a yellow certificate for making to the final round (under a minute).

I went to London and Toronto Ontario.

 

Erno Rubik was at the Canadian Championships at the Ontario Science Centre.

Ron Lancaster was also a judge, and Stewart Sims from Ideal Toy was there.



From cube-lovers-errors@curry.epilogue.com  Fri Jun  7 14:58:06 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA12863 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 7 Jun 1996 14:58:06 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <0lhoF=200YUg0BF4k0@andrew.cmu.edu>
Date: Thu,  6 Jun 1996 16:49:15 -0400 (EDT)
From: "Jonathan M. Cheyer" <cheyer+@cmu.edu>
To: CUBE-LOVERS@ai.mit.edu
Subject: Re: fastest hands in the midwest...
In-Reply-To: <v02130508addbb30e7cf0@[205.230.130.72]>
References: <v02130508addbb30e7cf0@[205.230.130.72]>


I was the winner of the Massachusetts/New England region with a time
of 48.31 seconds.  I did have the distinction of being the youngest
winner however; I was only 9 years old and it was the summer of 1981.

Kristin, although Adam (my brother) and I did stay in touch with Jeff
Varasano for a few years, we eventually lost contact with him and
everyone else.  The best thing I remember about David Conrady was that
the day before the competition at That's Incredible, he dropped a
Rubik's Cube off of the 15th (or similar) floor and scared the heck
out of an old lady.  I had never seen a cube explode like that
before...


Jon

=============================================
==  Jonathan Cheyer            cheyer@cmu.edu
==  The only thing faster than light is time,
==  so enjoy it while you still can.
=============================================


From cube-lovers-errors@curry.epilogue.com  Sat Jun  8 14:33:05 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA16783 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 8 Jun 1996 14:33:04 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Fri, 7 Jun 1996 14:52:51 -0700 (PDT)
From: Darrell Fuhriman <darrell@grumblesmurf.net>
To: CUBE-LOVERS@ai.mit.edu
Subject: verifying correctness of a cube
Message-Id: <Pine.LNX.3.90.960607144913.3333A-100000@xian.grumblesmurf.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


So, I was recently given a cube, which once again sparked my interest in 
the whole thing, however it appears that the stickers have been pulled 
off and re-arranged at some point.  (The faces don't match any I've seen 
mentioned in the archives or the various web pages.)

What would be the right way to put it back together to get a "working" cube?

d.



From cube-lovers-errors@curry.epilogue.com  Sat Jun  8 14:32:08 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA16779 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 8 Jun 1996 14:32:07 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <199606072009.PAA20169@mail.cs.utexas.edu>
X-Mailer: exmh version 1.6.2 7/18/95
To: CUBE-LOVERS@ai.mit.edu
Subject: Re: Speed cubing 
In-Reply-To: Your message of "Thu, 06 Jun 1996 09:04:04 CDT."
             <199606061304.JAA20500@dimacs.rutgers.edu> 
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Date: Fri, 07 Jun 1996 15:09:45 -0500
From: Norman Richards <orb@cs.utexas.edu>

> I've heard about some pretty fast people who've claimed to 
> have averages in the low 20's, but I haven't seen them perform.
> 
> My buddy from high school, Scott Evans, now living in Austin,
> averages about 25 seconds these days.  He's the fastest active
> cubist I've seen in the last 10 years.  I'm at about 28 seconds.


  Whenever I see posts like this I have to wonder what methods you guys are
using to solve the cube.  My average casual speed is about 80 seconds and when
I get in blitz mode I usually can average below a minute.  But, I never 
get below say 45 seconds unless I get a really nice starting position and
things just fall into place.  My personal best ever is about 32 seconds, back
when I was in high school.  

  Anyways, I am curious what methods people use.  I've asked around and it 
seems
most people prefer to go top/middle/bottom.  In fact, all the published 
solutions go that way.  But, I learned to go top/bottom/middle because it is 
MUCH easier.  At the same time, I've seen that when solving a single face, 
most solutions suggest doing edge and the corner pieces, but I do corner and 
then edge.  I think this has to do with whether you do the middle or the bottom
next because with the middle/bottom approach you can leave out one corner
piece to do the middle.  But if you do bottom/middle then you can leave out
an edge piece to aid in getting the buttom edge pieces done.


  Here is a quick overview of my solution (because it is different than most
peoples):

  1. do the top face.  4 corners then any 3 edges.  (intuitive)
  2. align bottom corner pieces.  (pattern)
  3. rotate bottom corner pieces so the correct color is showing (pattern)
  4. place the remaining 4 bottom edges and the missing top edge (intuitive)
  5. put the 4 middle edge pieces in the correct positions (intuitive)
  6. rotate edge pieces as needed (pattern)

  
  Anyways, is there one technique that almost all speedy solutions use?  I've
tried the top/middle/bottom solutions but they seem very uninuitive.  Do
most speed people only use patterns? (or at least after the top layer?)  How
many patterns do you use?  When I go for speed, I tend to use two patterns
for step 2, and 4 possible patterns for step 3.  Meaning that I use about
7 patterns max for speed and I use 3 patterns total when doing it casually.  


  


   



From cube-lovers-errors@curry.epilogue.com  Sat Jun  8 14:31:38 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA16775 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 8 Jun 1996 14:31:37 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
From: ba05133@binghamton.edu
X-Authentication-Warning: bingsun2.cc.binghamton.edu: ba05133 owned process doing -bs
Date: Fri, 7 Jun 1996 15:27:55 -0400 (EDT)
X-Sender: ba05133@bingsun2
To: Rob Hochberg <hochberg@dimacs.rutgers.edu>
Cc: CUBE-LOVERS@ai.mit.edu
Subject: Re: Speed cubing
In-Reply-To: <199606061304.JAA20500@dimacs.rutgers.edu>
Message-Id: <Pine.SOL.L3.93.960607151737.27398A-100000@bingsun2>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


My name is Jiri Fridrich and I am the champon of Czechoslovakia from 1982.
I won the championship with time 23.55. When I was at my best, I was able
to solve the cube in 17 seconds on average (average from 10 consecutive
runs). Even today, after all those years, I can solve the cube in 20
seconds on average. I am using about 150 different algorithms and need 60
moves on average. 

Just for the record: The 1983 champion of Czechoslovakia, Robert Pergl,
won with 17.04. There must be *many* guys out there who can solve the cube
consistently below 20 sec :-) 

Jiri

On Thu, 6 Jun 1996, Rob Hochberg wrote:

> 
> I've heard about some pretty fast people who've claimed to 
> have averages in the low 20's, but I haven't seen them perform.
> 
> My buddy from high school, Scott Evans, now living in Austin,
> averages about 25 seconds these days.  He's the fastest active
> cubist I've seen in the last 10 years.  I'm at about 28 seconds.
> 
> Anyone else?
> 
> Rob hochberg@dimacs.rutgers.edu
> 
> 
> 



From cube-lovers-errors@curry.epilogue.com  Sat Jun  8 14:33:28 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA16787 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 8 Jun 1996 14:33:27 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Fri, 7 Jun 1996 20:27:52 -0400
From: AirWong@aol.com
Message-Id: <960607202751_212838202@emout15.mail.aol.com>
To: CUBE-LOVERS@ai.mit.edu
Subject: All these fast hands...

All this talk about these old competitions... When was the last one?


From cube-lovers-errors@curry.epilogue.com  Sat Jun  8 14:34:12 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA16793 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 8 Jun 1996 14:34:12 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <9606080509.AA08027@jrdmax.jrd.dec.com>
Date: Sat, 8 Jun 96 14:09:59 +0900
From: Norman Diamond 08-Jun-1996 1409 <diamond@jrdv04.enet.dec-j.co.jp>
To: cube-lovers@ai.mit.edu
Apparently-To: cube-lovers@ai.mit.edu
Subject: Re: Cube Contests
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=ISO-2022-JP

Mark Longridge reports:

>I was the sole prize-winning Canadian in the US contests (the 2nd one).
>Unfortunately, that was not really allowed by the rules so the feat
>was never recorded in the Ideal newsletters,

Oh.  Did Ideal's rules constrain the entrants to Hungarians only?

Should puzzlers located outside the US boycott Ideal products?
Unfortunately I didn't know about this in time to do so.

-- Norman Diamond           diamond@jrdv04.enet.dec-j.co.jp
[Speaking for Norman Diamond not for Digital.]


From cube-lovers-errors@curry.epilogue.com  Sun Jun  9 00:34:46 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id AAA17663 for <cube-lovers-outbound@curry.epilogue.com>; Sun, 9 Jun 1996 00:34:45 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sat, 8 Jun 1996 20:48:40 -0400
From: der Mouse <mouse@collatz.mcrcim.mcgill.edu>
Message-Id: <199606090048.UAA04049@Collatz.McRCIM.McGill.EDU>
To: CUBE-LOVERS@ai.mit.edu
Subject: Re:  verifying correctness of a cube

> So, I was recently given a cube, which once again sparked my interest
> in the whole thing, however it appears that the stickers have been
> pulled off and re-arranged at some point.  (The faces don't match any
> I've seen mentioned in the archives or the various web pages.)

Which doesn't necessarily mean it was attacked by a mad sticker-moving
artist; it could just be an off brand. :-)

> What would be the right way to put it back together to get a
> "working" cube?

Well, first I'd try solving it and see if I end up with something like
two edge cubies colored the same, or a corner having colors that belong
to opposite center cubies.  If no such problem is found but a parity
constraint is violated (eg, a single edge cubie flipped), it was just
taken apart, so I'd take it apart and put it back together solved.  If
I _do_ find an "impossible" cubie, then I'd just take the stickers off
and put them back on such that every face is a solid color.  (I'd
probably try to mostly-solve it first, so's to minimize the number of
stickers that need moving, but that's a frill.)  If you take all the
stickers off, all states are the same; there is no mechanical state you
have to match when putting the stickers back on.

					der Mouse

			    mouse@collatz.mcrcim.mcgill.edu


From cube-lovers-errors@curry.epilogue.com  Sun Jun  9 22:45:50 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id WAA20192 for <cube-lovers-outbound@curry.epilogue.com>; Sun, 9 Jun 1996 22:45:49 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <v02130500ade12c71b495@[205.230.130.72]>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Sun, 9 Jun 1996 20:49:08 -0500
To: Norman Richards <orb@cs.utexas.edu>, CUBE-LOVERS@ai.mit.edu
From: Kristin Looney <kristin@tsi-telsys.com>
Subject: Methods (Re: Speed cubing)

At 3:09 PM 6/7/96, Norman Richards wrote:
> Here is a quick overview of my solution:
>
> 1. do the top face. 4 corners then any 3 edges. (intuitive)
> 2. align bottom corner pieces. (pattern)
> 3. rotate bottom corner pieces so the correct color is showing (pattern)
> 4. place the remaining 4 bottom edges and the missing top edge (intuitive)
> 5. put the 4 middle edge pieces in the correct positions (intuitive)
> 6. rotate edge pieces as needed (pattern)

my method:

1. do top corners. I always start with white. (intuitive)
2. do bottom corners.
        2a. bring bottom corner color onto bottom face (one of 2 patterns)
        2b. orient bottom corners with each other (one of 2 patterns)
3. fill in all but one edge on top and bottom (intuitive)
4. fill in last edge (pattern)
5. solve middle ring of edges (usually 2 patterns)

The only person I have ever met used this same method was Minh,
the winner of the first U.S. championship. The only differences between
our methods was that he had more patterns memorized for step 5. I
typically do one pattern, which gets me close, and then finish it up
with one more pattern - where Minh could look at that last ring and
instantly know a pattern that would bring the cube into it's final
solved state. His hands were also a lot faster than mine.

The beauty of this method is that there is very little to memorize -
and although it doesn't give me very many 20 second times, it's
always well under a minute. In both steps 2a and 2b, one of the
two pattern options comes up more than 90% of the time - and
you can just do that pattern twice if you want, so you really only
have to know one pattern if you are willing to loose a few seconds
10% of the time. Since the pattern in step 4 is one of the patterns
in step 5, my solution can get you a solved cube reasonably quickly
with only 4 memorized patterns. And with a bit more memorization
it can begin to screeeeeem. For some reason I haven't really had much
need for speed solving these days - under a minute is just fine to keep
up my reputation.

-K.




From cube-lovers-errors@curry.epilogue.com  Sun Jun  9 22:46:11 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id WAA20196 for <cube-lovers-outbound@curry.epilogue.com>; Sun, 9 Jun 1996 22:46:11 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <31BB7363.799@erols.com>
Date: Sun, 09 Jun 1996 20:59:15 -0400
From: Charlie Dickman <charlied@erols.com>
Reply-To: charlied@erols.com
X-Mailer: Mozilla 2.01 (Macintosh; U; 68K)
Mime-Version: 1.0
To: Cube-Lovers <Cube-Lovers@ai.mit.edu>
Subject: Re: A 4-D Rubik's Cube
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

I'm sorry to bother all of you with this again but I have converted the 
document describing the model and implementation of a 4-dimensional 
(3x3x3x3) Rubik's Cube into a word processing document which I can 
transform into several formats, including MS Word 3.0 & 4.0 and RTF.

Anyone interested in a copy in word processing format let me know your 
interest and if you have a preferred format.  Unfortunately, a text only 
document will not be able to include any of the figures and as this does 
a grave injustice to the paper I would rather not ship text only copies.

Regards...
Charlie Dickman
charlied@erols.com


From cube-lovers-errors@curry.epilogue.com  Mon Jun 10 14:52:37 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA22165 for <cube-lovers-outbound@curry.epilogue.com>; Mon, 10 Jun 1996 14:52:36 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
From: whuang@cco.caltech.edu
Message-Id: <199606101427.HAA07096@accord.cco.caltech.edu>
Subject: Re: "Better" Method?
To: cube-lovers@ai.mit.edu
Date: Mon, 10 Jun 1996 07:27:00 -0700 (PDT)
X-Mailer: ELM [version 2.4 PL22]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

> Kristin Looney <kristin@tsi-telsys.com> writes:
> >my method:
> 
> >1. do top corners. I always start with white. (intuitive)
> >2. do bottom corners.
> >        2a. bring bottom corner color onto bottom face (one of 2 patterns)
> >        2b. orient bottom corners with each other (one of 2 patterns)
> >3. fill in all but one edge on top and bottom (intuitive)
> >4. fill in last edge (pattern)
> >5. solve middle ring of edges (usually 2 patterns)
> 
> >The only person I have ever met used this same method was Minh,
> >the winner of the first U.S. championship.
> 
> Odd.  I use the same method, and before this I was almost convinced I was the
> only one.  I guess I never asked Minh.
> 
> > The only differences between
> >our methods was that he had more patterns memorized for step 5. I
> >typically do one pattern, which gets me close, and then finish it up
> >with one more pattern - where Minh could look at that last ring and
> >instantly know a pattern that would bring the cube into it's final
> >solved state. His hands were also a lot faster than mine.
> 
> I only have two patterns for step 5.  One basically permutes three edge
> pieces, the other flips a pair.  It does have the advantage of being
> easy to explain, though.
> 
> Come to think of it, my method is slightly different -- I orient the
> corners BEFORE positioning them.
> 
> >The beauty of this method is that there is very little to memorize -
> >and although it doesn't give me very many 20 second times, it's
> >always well under a minute. 
> 
> Ditto.
> 
> I think the beauty of this "cubie"-oriented method is how easy it
> generalizes to larger cubes.  By just adding 2 patterns, I can solve the
> 4x4x4, and one more pattern gives me the 5x5x5.  I think the "layer"-oriented
> method is much harder to generalize.
> 
> 



From cube-lovers-errors@curry.epilogue.com  Mon Jun 10 14:53:14 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA22175 for <cube-lovers-outbound@curry.epilogue.com>; Mon, 10 Jun 1996 14:53:13 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Message-Id: <v01530500ade036e47617@[205.214.160.101]>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Mon, 10 Jun 1996 09:17:05 -0700
To: CUBE-LOVERS@ai.mit.edu
From: Lars Petrus <lars@netgate.net>
Subject: Re: Speed cubing


>  Anyways, I am curious what methods people use.  I've asked around and it
>seems
>most people prefer to go top/middle/bottom.  In fact, all the published
>solutions go that way.  But, I learned to go top/bottom/middle because it is
>MUCH easier.  At the same time, I've seen that when solving a single face,
>most solutions suggest doing edge and the corner pieces, but I do corner and
>then edge.  I think this has to do with whether you do the middle or the bottom
>next because with the middle/bottom approach you can leave out one corner
>piece to do the middle.  But if you do bottom/middle then you can leave out
>an edge piece to aid in getting the buttom edge pieces done.
>
>
>  Here is a quick overview of my solution (because it is different than most
>peoples):
>
>  1. do the top face.  4 corners then any 3 edges.  (intuitive)
>  2. align bottom corner pieces.  (pattern)
>  3. rotate bottom corner pieces so the correct color is showing (pattern)
>  4. place the remaining 4 bottom edges and the missing top edge (intuitive)
>  5. put the 4 middle edge pieces in the correct positions (intuitive)
>  6. rotate edge pieces as needed (pattern)
>
>
>  Anyways, is there one technique that almost all speedy solutions use?  I've
>tried the top/middle/bottom solutions but they seem very uninuitive.

The layer by layer techniques are useless for speed cubing. Most people
use them, because they are a simple way for the human mind to approach the
problem, but they are not natural "from the cubes point of view".

In the final of the swedish championship, 8 of 11 competitors used the
vanilla layer-by-layer method. The other 3 of us finished 1, 2 and 3!

The basic problem with the layer method is obvious, and very big. When you
have completed the first layer, you can do *nothing* without breaking it up.
So you break it, do something, then restore it, again and again. It's quite
obvious that this layer is in the way of your solution, not a part of it.

My approach was to find something that, once acomplished, did not need to
be broken up. A true step on the way to a solution. What I came up with was
to first solve a 2x2x2 corner. After that, you can move three sides freely,
and not touch what you achieved. Then I expand it to a 2x2x3, which leaves
two sides free. Then you fiddle a bit, and go to 2x3x3 and 3x3x3.

1. do the 2x2x2 (intuitive)
2. expand it to a 2x2x3 (intuitive)

I don't know how to say this in group-babble, but when you move just 2
sides, you can never "truly" rotate an edge or move a corner. This means
by temporarily breaking the 2x2x3 you can very quickly rotate edges and
move corners. On average, you can get the edges correctly rotated in about
5 moves. You could probably move the corners too, in 2-3 more moves, but
it's too hard to see the corner condition to do this while speed cubing.

But if you like, you can do 5 before 4.

3. flip the edges (intuitive/pattern)
4. expand to 2x3x3, using only the 2 free layers (intuitive)
5. move corners (pattern)
6. rotate corners (pattern)
7. move edges (pattern)

Step 4 can be quite hard before you're used to the problems. The others
should be simple for anyine familiar with the cube.

In reality, there are so many special cases in the final layer that 5-7
really is just one phase to solve the final layer.

Using this method, I use on average 60 moves while speed cubing, and I have
done 100 consecutive solutions in an average of 50.53 moves, while taking
time to think about what I'm doing.

>  Do
>most speed people only use patterns? (or at least after the top layer?)  How
>many patterns do you use?  When I go for speed, I tend to use two patterns
>for step 2, and 4 possible patterns for step 3.  Meaning that I use about
>7 patterns max for speed and I use 3 patterns total when doing it casually.

Well, for the final layer I use maybe 20-50 different patterns.


Singmaster asked all the 19 finalists in the Budapest world championship
what method they used. According to him, half used Minhs method, half used
another method, and I was the only one using something else.

  -  -  -  -
For every economist, there exists an equal and opposite economist.

Lars Petrus, Sunnyvale, California  -  lars@netgate.net




From cube-lovers-errors@curry.epilogue.com  Mon Jun 10 14:52:01 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id OAA22153 for <cube-lovers-outbound@curry.epilogue.com>; Mon, 10 Jun 1996 14:51:59 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
From: ba05133@binghamton.edu
X-Authentication-Warning: bingsun3.cc.binghamton.edu: ba05133 owned process doing -bs
Date: Mon, 10 Jun 1996 10:21:57 -0400 (EDT)
X-Sender: ba05133@bingsun3
To: Kristin Looney <kristin@tsi-telsys.com>
Cc: Norman Richards <orb@cs.utexas.edu>, CUBE-LOVERS@ai.mit.edu
Subject: Re: Methods (Re: Speed cubing)
In-Reply-To: <v02130500ade12c71b495@[205.230.130.72]>
Message-Id: <Pine.SOL.L3.93.960610100755.6020C-100000@bingsun3>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


I am including my method for solving the cube. It enables me to solve the
cube in 20 seconds on average (since I am not as fast as I used to be 14
years ago :-( ).

1. Do the four edges (white first) (2 sec.)
2. Put the white corner including the corresponding edge from the second
slice. When you put all four white corners, two slices on the cube will be
done. In this stage, almost no algorithms are necessary. Most positions
can be solved with intuition. (4 x 2 sec = 8 sec.)
3. Turn all 8 small cubes from the last slice so that the last face has
the same color. There are only 40 different positions (not counting
symmetrical positions). On average, 10 moves are necessary to do this
phase.(3 sec.).
4. Move the cubes in the last slice so that the cube is solved. There are
only 13 different positions. On average, 10-15 moves are necessary. (4
sec.)

For the whole system, 40+13=53 algorithms are necessary. One also needs
about 8 short algorithms for the second phase. Altogether, 61 algorithms
will enable you to solve the cube in 17 seconds on average, if you can
turn 4 turns per second, and if you can minimize time gaps between
algorithms. 

The handling of the last (3-rd) slice is probably the most efficient
approach ane can come up with. One only needs to carry out two
algorithms to do the 3-rd slice. That is very effective. Breaking the last
slice into four stages (turn edges, turn corners, move edges, move
corners) is less demanding on the algorithmic part, but needs much more
moves and more idle time between algorithms. 

Jiri Fridrich



From cube-lovers-errors@curry.epilogue.com  Tue Jun 11 13:24:32 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id NAA24853 for <cube-lovers-outbound@curry.epilogue.com>; Tue, 11 Jun 1996 13:24:32 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Tue, 11 Jun 1996 16:56:52 BST
From: David Singmaster Computing & Maths South Bank Univ <david.singmaster@sbu.ac.uk>
To: cube-lovers@ai.mit.edu
Message-Id: <009A3B3F.74098380.1922@vax.sbu.ac.uk>
Subject: Orbits, re Jerry Bryan's message of 5 Jun

	First apologies if this has already been discussed - I'm behind on my
email.
	Orbit is used in the context of the action of a group on a set.  The
orbit of a point in the set is the set of all points that the original point
can be carried to by the actions of the group.
	Jerry mentioned that I said there are 12 orbits of the entire cube.
This is correct in that one is thinking of the group of the cube as acting on
patterns or configurations of the entire cube.  Martin Scho"nert is correct
in saying that these are cosets of the cube group in the larger group of
assemblies of the cube, or permutations of the parts.  
	However, it is not always the case that the set being acted upon can be
given a group structure.  E.g. when one considers the action of the cube group
on the individual pieces, then the orbit of a corner piece is the set of
8 corners.
	Perhaps the astronomical imagery can help.  Think of a planet (or
what have you).  There is a group of physical motions of this and the orbit
is the set of positions which these motions can carry the planet to.  The
case of the orbit of a corner piece is quite easy to visualise.  The more
general contexts of the orbits of achievable positions are less easy to
visualize.
	Perhaps another example may help.  Consider the 14-15 or 1 puzzle.
For a given position of the blank, only the even permutations are achievable,
so we can speak of two orbits, each of which has  15!/2  positions.  If we
permit the blank to move about, we again get half the possibilities, i.e.
16!/2  positions, and two orbits.
DAVID SINGMASTER,  Professor of Mathematics and Metagrobologist
School of Computing, Information Systems and Mathematics
Southbank University, London, SE1 0AA, UK.
Tel: 0171-815 7411;  fax: 0171-815 7499; 
email:  zingmast  or  David.Singmaster  @vax.sbu.ac.uk


From cube-lovers-errors@curry.epilogue.com  Wed Jun 12 23:26:55 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA03928 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 12 Jun 1996 23:26:54 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 12 Jun 1996 09:52:56 +0100
Message-Id: <96061209525597@glam.ac.uk>
From: VANESSA PARADIS WANTS ME <cmaggs@glam.ac.uk>
To: CUBE-LOVERS@ai.mit.edu
X-Vms-To: RUBIKCUBE

Off the point completely, anyone got other Rubik puzzles?
My record with the Clock is 8 seconds, but my average is around 15-18 seconds.

Anyone else?


From cube-lovers-errors@curry.epilogue.com  Wed Jun 12 23:25:38 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA03916 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 12 Jun 1996 23:25:37 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 12 Jun 1996 09:36:45 +0100
Message-Id: <96061209364515@glam.ac.uk>
From: VANESSA PARADIS WANTS ME <cmaggs@glam.ac.uk>
To: CUBE-LOVERS@ai.mit.edu
X-Vms-To: RUBIKCUBE



1 Minute 26!?!?!?!? That's very impressive. I can say that ONCE I got it down
to about 1 minute 10, but that was lucky. What order do you solve the pieces?
Top to Bottom? I'm trying to find the fastest possible method by combining
methods from other people.
=====================================================                                 

I solve top, bottom, middle, rotate.

Pretty quick.

Have tried top, middle bottom, but it is a little slower.

How about you, what metthod do you use


From cube-lovers-errors@curry.epilogue.com  Wed Jun 12 23:26:00 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA03920 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 12 Jun 1996 23:25:59 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 12 Jun 1996 09:46:47 +0100
Message-Id: <96061209464724@glam.ac.uk>
From: VANESSA PARADIS WANTS ME <cmaggs@glam.ac.uk>
To: CUBE-LOVERS@ai.mit.edu
X-Vms-To: RUBIKCUBE

I have two books.
One (THE SIMPLKE SOLUTION TO THE RUBIK CUBE) which is not very good!

The second, YOU CAN DO THE CUBE, is by Patrick Bossert and was written in 1981.
Does anyone know where Patrick is now?



From cube-lovers-errors@curry.epilogue.com  Wed Jun 12 23:27:11 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA03932 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 12 Jun 1996 23:27:11 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 12 Jun 1996 17:33:15 -0700
From: michael reid <mr@emf.net>
Message-Id: <199606130033.RAA28824@emf.emf.net>
To: cube-lovers@ai.mit.edu
Subject: Re: Cube Contests

mark writes

> I was never sure if Mike Reid of Cube-Lovers was the same Mike Reid in the
> 
> cube contests...

i was only in one contest: october 1982 in some mall in new jersey.
i came in first with a time of 27.3 seconds; very stiff cubes.

but if he really means "contests" (plural), that would mean - shudder -
there are imposters out there!  :-}

mike


From cube-lovers-errors@curry.epilogue.com  Wed Jun 12 23:26:20 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA03924 for <cube-lovers-outbound@curry.epilogue.com>; Wed, 12 Jun 1996 23:26:19 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Wed, 12 Jun 1996 09:49:37 +0100
Message-Id: <96061209493732@glam.ac.uk>
From: VANESSA PARADIS WANTS ME <cmaggs@glam.ac.uk>
To: CUBE-LOVERS@ai.mit.edu
X-Vms-To: RUBIKCUBE

From:	SMTP%"kristin@tsi-telsys.com" 10-JUN-1996 04:00:41.88
To:	Norman Richards <orb@cs.utexas.edu>, CUBE-LOVERS@ai.mit.edu
CC:	
Subj:	Methods (Re: Speed cubing)

At 3:09 PM 6/7/96, Norman Richards wrote:
> Here is a quick overview of my solution:
>
> 1. do the top face. 4 corners then any 3 edges. (intuitive)
> 2. align bottom corner pieces. (pattern)
> 3. rotate bottom corner pieces so the correct color is showing (pattern)
> 4. place the remaining 4 bottom edges and the missing top edge (intuitive)
> 5. put the 4 middle edge pieces in the correct positions (intuitive)
> 6. rotate edge pieces as needed (pattern)

my method:

1. do top corners. I always start with white. (intuitive)
2. do bottom corners.
        2a. bring bottom corner color onto bottom face (one of 2 patterns)
        2b. orient bottom corners with each other (one of 2 patterns)
3. fill in all but one edge on top and bottom (intuitive)
4. fill in last edge (pattern)
5. solve middle ring of edges (usually 2 patterns)

The only person I have ever met used this same method was Minh,
the winner of the first U.S. championship. The only differences between
our methods was that he had more patterns memorized for step 5. I
typically do one pattern, which gets me close, and then finish it up
with one more pattern - where Minh could look at that last ring and
instantly know a pattern that would bring the cube into it's final
solved state. His hands were also a lot faster than mine.

The beauty of this method is that there is very little to memorize -
and although it doesn't give me very many 20 second times, it's
always well under a minute. In both steps 2a and 2b, one of the
two pattern options comes up more than 90% of the time - and
you can just do that pattern twice if you want, so you really only
have to know one pattern if you are willing to loose a few seconds
10% of the time. Since the pattern in step 4 is one of the patterns
in step 5, my solution can get you a solved cube reasonably quickly
with only 4 memorized patterns. And with a bit more memorization
it can begin to screeeeeem. For some reason I haven't really had much
need for speed solving these days - under a minute is just fine to keep
up my reputation.

-K.



Strange, I always staer with WHITE aswell!!

Anyway, I`ll try that way but I always

1.  Position and orient all white corners and pieces
2.  Position and orient bottom corners.
3.  Position and orient remaing bottom and middle slice pieces.




From cube-lovers-errors@curry.epilogue.com  Thu Jun 13 23:31:29 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id XAA06498 for <cube-lovers-outbound@curry.epilogue.com>; Thu, 13 Jun 1996 23:31:28 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Sender: mrhip@palladium.corp.sgi.com
Message-Id: <31C09129.41C6@corp.sgi.com>
Date: Thu, 13 Jun 1996 15:07:37 -0700
From: "Jason K. Werner" <mrhip@palladium.corp.sgi.com>
X-Mailer: Mozilla 2.01S (X11; I; IRIX 5.3 IP22)
Mime-Version: 1.0
To: CUBE-LOVERS@ai.mit.edu
Subject: Re: fastest hands in the midwest...
X-Url: http://www.corp.sgi.com/
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

On Jun 5, 18:02, Kristin Looney wrote:
> Subject: fastest hands in the midwest...
> > By the way, I can do the cube in 1 minute 26 seconds.
> > How does that compare with everyone else!
>
> 37.72 won me the midwest championship, my best official time was
> 35.30 seconds which placed me 5th in the country. I think it was 1981.
> Now?  I don't get timed very often, but it's still usually under a minute.
>
> I guess it is like riding a bicycle.
>
> Anyone else on this list from those contest days?  Minh Thai - are you
> out there?  How about Jeff Verasono? or David P. Conrady?  I've often
> wondered what that crazy guy with the bright maroon hair ended up
> doing with his life...

I was in two different contests; one was at Six Flags Magic Mountain in
southern California, the other was at some mall in L.A.  I was never fast
enough to get to any of the finalist rounds, but it was fun all the same.

Minh Thai was at the contest at the mall; Ideal had him there to promote it.  I
happened to have a Revenge on me at the time, and he thought he'd demonstrate
to the crowd his solution for it.  He managed not to solve it, but rather
shatter it in about 10 seconds flat.  Not bad, eh?  :)

	-Jason

-- 
Jason K. Werner, Silicon Graphics
U.S. Field Operations I/S Sys Admin
mrhip@corp.sgi.com, 415-933-6397
"I will choose free will".....Neil Peart
"These go to eleven".....Nigel Tufnel


               __          __   __          __         _
               \ \        / /   \ \        / /        | |
                \ \  /\  / /__   \ \  /\  / /__  _ __ | |
                 \ \/  \/ / _ \   \ \/  \/ / _ \| '_ \| |
                  \  /\  /  __/    \  /\  / (_) | | | |_|
                   \/  \/ \___|     \/  \/ \___/|_| |_(_)
			FREE SPEECH ON THE INTERNET!


From cube-lovers-errors@curry.epilogue.com  Fri Jun 14 13:58:44 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id NAA08278 for <cube-lovers-outbound@curry.epilogue.com>; Fri, 14 Jun 1996 13:58:43 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Fri, 14 Jun 1996 16:35:18 BST
From: David Singmaster Computing & Maths South Bank Univ <david.singmaster@sbu.ac.uk>
To: cube-lovers@ai.mit.edu
Message-Id: <009A3D97.EFAEB000.1938@vax.sbu.ac.uk>
Subject: Storage of cube positions

	Responding to Rubin Shai has made me think of an idea which may have
been discussed already.
	I was wondering if one could reduce the storage required to represent
a position or pattern.  In my notation, one basically records the movement
of each facelet.  However, if  UR -> RB  and we know that the UR piece is moving
to the RB place, then we only need to record the  U -> R  part of the motion.
In order to know which piece is moving, number all the 54 facelets.  Suppose
the facelets of UR are 1,2 in order, and the facelets of RB are  11,12 in order.
Then recording that  1 -> 11  completely describes the movement  UR -> RB.
	So we only need to record the movement of one of the facelets of
each piece - the others have to follow.  Hence we can describe the position
of the cube by a vector of 20 numbers in the range 1 .. 54.
	Of course, one has to pay for this - the composition of movements will
be more complex.  But if storage is your problem rather than time, it may be
worth it.
DAVID SINGMASTER,  Professor of Mathematics and Metagrobologist
School of Computing, Information Systems and Mathematics
Southbank University, London, SE1 0AA, UK.
Tel: 0171-815 7411;  fax: 0171-815 7499; 
email:  zingmast  or  David.Singmaster  @vax.sbu.ac.uk


From cube-lovers-errors@curry.epilogue.com  Sat Jun 22 19:28:53 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id TAA08808 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 22 Jun 1996 19:28:52 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sat, 22 Jun 1996 21:58:06 +1000 (EST)
Message-Id: <199606221158.VAA13274@pcug.org.au>
X-Sender: pfoster@pcug.org.au
X-Mailer: Windows Eudora Version 1.4.4
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: Cube-Lovers@ai.mit.edu
From: Peter Foster <pfoster@pcug.org.au>
Subject: Thistlethwaites algorithm (and others)

Morwen Thistlethwaite devised a solution for Rubik's cube which required at
most 50
turns. I would like to know where I can get a copy of this solution. Can
anyone help?
I have asked David Singmaster about this. He replied that he does have
Thistlethwaite's
solution, but that it has been significantly improved and he does not know
the details.
So, if someone can point me in the right direction I would be most grateful!

While I am interested in Thistlethwaite's solution, it is no use for speed
solving.
There was a recent posting, from Jiri Fridrich, which outlined his speed
solution, as
follows:

>1. Do the four edges (white first) (2 sec.)
>2. Put the white corner including the corresponding edge from the second
>slice. When you put all four white corners, two slices on the cube will be
>done. In this stage, almost no algorithms are necessary. Most positions
>can be solved with intuition. (4 x 2 sec = 8 sec.)
>3. Turn all 8 small cubes from the last slice so that the last face has
>the same color. There are only 40 different positions (not counting
>symmetrical positions). On average, 10 moves are necessary to do this
>phase.(3 sec.).
>4. Move the cubes in the last slice so that the cube is solved. There are
>only 13 different positions. On average, 10-15 moves are necessary. (4
>sec.)
>
>For the whole system, 40+13=53 algorithms are necessary. One also needs
>about 8 short algorithms for the second phase. Altogether, 61 algorithms
>will enable you to solve the cube in 17 seconds on average, if you can
>turn 4 turns per second, and if you can minimize time gaps between
>algorithms. 

Is there any chance of Jiri Fridrich posting these algorithms (or perhaps making
them available via FTP)?

Thanks in advance...

Peter Foster

_______________________________________________________________
Peter Foster                    This sig is dedicated to all those who
616-231-2245                   did not dedicate their sigs to themselves.
pfoster@pcug.org.au



From cube-lovers-errors@curry.epilogue.com  Sat Jun 22 21:43:53 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id VAA09148 for <cube-lovers-outbound@curry.epilogue.com>; Sat, 22 Jun 1996 21:43:52 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sun, 23 Jun 1996 03:41:53 +0200
From: Dik.Winter@cwi.nl
Message-Id: <9606230141.AA09515=dik@hera.cwi.nl>
To: Cube-Lovers@ai.mit.edu, pfoster@pcug.org.au
Subject: Re: Thistlethwaites algorithm (and others)

I think there was in this mail a serious problem of confusion between a
solution by algorithm and a solution by hand.  While Thistlethwaite's
algorithm was (at that time) very fast, nobody would consider to use
the solution by hand.  The current faster algorithms are not even doable
by hand (unless your backtracking is impeccable).

 > There was a recent posting, from Jiri Fridrich, which outlined his speed
 > solution, as follows:

On the other hand Jiri Fridrich's solution is not a solution for computers.
It is only measured in time, not in number of moves.  And time is something
extremely machine-dependant.

 > Is there any chance of Jiri Fridrich posting these algorithms (or perhaps
 > making them available via FTP)?

But the algorithm was posted.  You posted it yourself!


From cube-lovers-errors@curry.epilogue.com  Mon Jun 24 15:34:09 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id PAA13206 for <cube-lovers-outbound@curry.epilogue.com>; Mon, 24 Jun 1996 15:34:06 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
From: ba05133@binghamton.edu
X-Authentication-Warning: bingsun2.cc.binghamton.edu: ba05133 owned process doing -bs
Date: Mon, 24 Jun 1996 08:18:45 -0400 (EDT)
X-Sender: ba05133@bingsun2
To: Peter Foster <pfoster@pcug.org.au>
Cc: Cube-Lovers@ai.mit.edu
Subject: Re: Thistlethwaites algorithm (and others)
In-Reply-To: <199606221158.VAA13274@pcug.org.au>
Message-Id: <Pine.SOL.L3.93.960624080520.18930A-100000@bingsun2>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


On average, my algorithm requires about 60 moves. It has been optimized
for speed, not for the number of moves. Once I have little more time, I
may retype all the necessary algorithms into an electronic form and post
them here. I published the algorithms in 1982 in Mlady Svet
(a Czech magazine). But this will probably not help you too much :-(

Jiri Fridrich


On Sat, 22 Jun 1996, Peter Foster wrote:

> Is there any chance of Jiri Fridrich posting these algorithms (or perhaps making
> them available via FTP)?
> 
> Thanks in advance...
> 
> Peter Foster
> 
> _______________________________________________________________
> Peter Foster                    This sig is dedicated to all those who
> 616-231-2245                   did not dedicate their sigs to themselves.
> pfoster@pcug.org.au
> 
> 
> 



From cube-lovers-errors@curry.epilogue.com  Mon Jul  1 00:53:25 1996
Return-Path: cube-lovers-errors@curry.epilogue.com
Received: from curry.epilogue.com (localhost [127.0.0.1]) by curry.epilogue.com (8.6.12/8.6.12) with SMTP id AAA24630 for <cube-lovers-outbound@curry.epilogue.com>; Mon, 1 Jul 1996 00:53:24 -0400
Precedence: bulk
Errors-To: cube-lovers-errors@curry.epilogue.com
Date: Sun, 30 Jun 1996 21:05:13 -0300
From: FERNANDO VON REICHENBACH <reichen@cnea.edu.ar>
Message-Id: <199607010005.VAA31570@cnea.edu.ar>
To: Cube-Lovers@ai.mit.edu
Subject: Counting moves

  My name is Isidro Costantini, I'm a cube lover since '81.
  I used to have some cube meetings here in Buenos Aires and we have
some interesting formulas. We disserted about how to count cube moves,
and finally decided that any double move (ie: R2) are TWO moves instead
of one. This was because there are a lot of even/odd properties when
you count moves in that way. I'm quite surprised that when I checked
some pages and moves aren't count in that way. For example, to flip two
edges in it's place will always take an even number of moves (14)
(I'll put the shortest formula we have in parenthesis) (always counting
X2 as two moves)  Any 3 edges xchg (12) or Flip 2 corners (14) or
Xchg 3 corners (8) is even.  Any [Xchg 2 corners And Xchg 2 edges] is 
always odd (ie: R1 U3 L1 U2 R3 U1 R1 U2 R3 L3 U1 = 13 counting U2 as two)
  I have a collection of all the combinations of these nonFliping
corner/edges exchange ODD formulas in one face, some of them are of 17
or more movements and I wonder if there are any better than we did.
  ( Where's a place to check for those formulas? )
  Another good example is (xchg 3 edges,noFlip) (12) R2 U1 F1 B3 R2
F3 B1 U1 R2 (9 moves using your way of counting) and another equivalent:
B3 U3 R3 U1 R1 B1 followed by F1 R1 U1 R3 U3 F3 (6+6 moves, same position)
  Another way of counting could be adding the suffix (1,2 or 3) (counting
only clockwise moves) which would preserve parity as well.
  I would be pleased if some one can tell me about this subject.


