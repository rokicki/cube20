From mschoene@math.rwth-aachen.de  Sun Feb  5 19:07:52 1995
Return-Path: <mschoene@math.rwth-aachen.de>
Received: from samson.math.rwth-aachen.de by life.ai.mit.edu (4.1/AI-4.10) for /com/archive/cube-lovers id AA22273; Sun, 5 Feb 95 19:07:52 EST
Received: from hobbes.math.rwth-aachen.de by samson.math.rwth-aachen.de with smtp
	(Smail3.1.28.1 #11) id m0rbGx8-000MPPC; Mon, 6 Feb 95 01:05 MET
Received: by hobbes.math.rwth-aachen.de (Smail3.1.28.1 #19)
	id m0rbGx8-00025cC; Mon, 6 Feb 95 01:05 WET
Message-Id: <m0rbGx8-00025cC@hobbes.math.rwth-aachen.de>
Date: Mon, 6 Feb 95 01:05 WET
From: "Martin Schoenert" <Martin.Schoenert@math.rwth-aachen.de>
To: cube-lovers@life.ai.mit.edu
In-Reply-To: Mark Longridge's message of Fri, 3 Feb 1995 00:40:00 -0500 <60.1030.5834.0C1CD83B@canrem.com>
Subject: Re: More skewb thoughts

Mark Longridge wrote in his e-mail message of 1995/01/29

    If we use only one tetrad of the skewb then GAP also finds this number:

    ... shows how GAP computes the size of this subgroup as 3149280 ...

I replied in my e-mail message of 1995/01/31

    Note however, that the corners corresponding to the four generators for
    this subgroups do *not* form a tetrad.

Mark Longridge replied in his e-mail message of 1995/02/03

    My computer Webster says that a tetrad is 'A group of four'.
    Perhaps there is another meaning in geometry or group theory?

Sorry for the confusion.  There is no special meaning of the word
``tetrad'' that I am aware of, neither in geometry nor in group theory.

I interpreted Mark's ``one tetrad of the skewb'' as ``four corners of the
skewb that are the corners of a regular tetrahedron'', probably because
of the common prefix ``tetra''.

Note that it is problematic to interpret Mark's ``one tetrad of the
skewb'' as ``one group of four corners of the skewb'', since not for all
groups of four corners of the skewb the subgroup generated by the
corresponding generators has size 3149280, for example the subgroup
generated by the generators corresponding to the four corners of the up
face, which I used in my first e-mail message, has size 6298560.

All in all there are 70 different ways to select a 4-tuple of corners
of the cube.  Up to rotation there are 6 (essentially) different types.

      +------*    +------*    *------*    +------*    +------*    +------*
     /|     /|   /|     /|   /|     /|   /|     /|   /|     /|   /|     /|
    *------+ |  *------* |  *------* |  *------* |  *------* |  +------* |
    | |    | |  | |    | |  | |    | |  | |    | |  | |    | |  | |    | |
    | *----|-+  | +----|-+  | +----|-+  | *----|-+  | +----|-+  | *----|-+
    |/     |/   |/     |/   |/     |/   |/     |/   |/     |/   |/     |/
    +------*    +------*    +------+    +------+    *------+    *------+

The first type is what I proposed in my last e-mail message.
The 4 corners are the corners of a regular tetrahedron.
There are 2 such 4-tuples (corresponding to the 2 tetrahedrons).
The subgroup generated by the corresponding generators has size 3149280,
and is a model for the essential SKEWB (i.e. the SKEWB up to rotations).
It leaves the 4 corners RUB, LUF, RDF, and LDB at their home positions,
so it is easy to determine the orientation of an arbitrary state (in the
sense that it is easy to determine how to rotate this state so that the
rotated state is in the subgroup generated by RUB, LUF, RDF, and LDB).

The second type is what Mark proposed in his last e-mail message.  There
are 8 such 4-tuples (corresponding to the 8 possible choices for the
``central'' corner RUF).  The subgroup generated by the corresponding
generators also has size 3149280, and is a model for the essential SKEWB.
It fixes the corner LDB, so it is again easy to determine the orientation
of an arbitrary state.

The third type is what I proposed in my first e-mail message.  There are
6 such 4-tuples (corresponding to the 6 faces).  The subgroup generated
by the corresponding generators has size 6298560, so it is too large by a
factor of 2 to be a model for the essential SKEWB.  It fixes the face
center of the down face.  In this case it is not easy to determine the
orientation of an arbitrary state (in the sense above it is in fact
impossible, because for every state there are *two* rotations such that
the rotated cube is in the subgroup generated by RUB, LUB, RUF, and LUF).

There are 24 4-tuples of the fourth type.  The subgroup generated by
the corresponding generators has size 9447840, so it is too large by
a factor of 3 to be a model for the essential SKEWB.  It fixes nothing.

There are 24 4-tuples of the fifth type, and 6 4-tuples of the sixth
type.  The subgroups generated by the corresponding generators have size
37791360, so it is in fact the group G generated by all 8 generators.

So if we want a model for the essential SKEWB then we have to take one of
the first two types.  My preference is for the first type, which I think
is more special than the second.  Namely there are only 2 such 4-tuples,
whereas there are 8 4-tuples of the second type.  Correspondingly there
are only 2 such subgroups (which are both normal in the group G generated
by 8 generators, though they are conjugated in the group CG generated by
the 8 generators and the rotations of the rigid cube).

Mark Longridge wrote in his e-mail message of 1995/01/29

    By moving first one tetrad and then the other we can easily change
    the skewb's orientation in space.

I replied in my e-mail message of 1995/01/31

    This comment I don't understand at all.  Could you clarify it a bit?

Mark Longridge replied in his e-mail message of 1995/02/03

    I shall amend by comment >> above to:

    By moving first one half of the puzzle and then the other
    we can easily change the skewb's orientation in space.

I interpret that as follows.  By first using an element g1 from the
subgroup H1 generated by RUB, RUF, LUF, and RDF, and then an
element g2 from the subgroup H2 generated by RDB, LDB, LDF, and LUB,
we can acchieve *any* rotation c of the rigid cube.

Now it is true that by first using an element g1 from the
subgroup H1 generated by RUB, RUF, LUF, and RDF, and then an
element g2 from the subgroup H2 generated by RDB, LDB, LDF, and LUB,
we can acchieve any element of the group G generated by all 8 generators
(this follows from the fact that |G| = |H1| |H2| / |H1 <intersect> H2|).

But G contains only one half of the rotations of the rigid cube.  So of
the 24 rotations of the rigid cube we can only achieve 12 (the even ones
if we view the rotations as permutations of the 4 diagonals of the cube).
This becomes obvious if you note that the 8 generators never exchange
the two sets of four corners that form tetrahedrons.

Mark also wrote in his e-mail message of 1995/02/03

    I just noticed that the number of states of the pyraminx (with vertex
    rotations included) also equals 75,582,720. (933,120 * 3^4)

Is this just by chance, or is there some connection between those two
puzzles?  Could you describe the pyraminx?

Have a nice day.

Martin.

-- .- .-. - .. -.  .-.. --- ...- . ...  .- -. -. .. -.- .-
Martin Sch"onert,   Martin.Schoenert@Math.RWTH-Aachen.DE,   +49 241 804551
Lehrstuhl D f"ur Mathematik, Templergraben 64, RWTH, 52056 Aachen, Germany

